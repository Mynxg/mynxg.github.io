import{aQ as r,S as d,U as s,V as t,ad as e,af as a,a9 as c,aR as l,F as i}from"./framework-7ff7f46e.js";const h={},u=t("h2",{id:"前置知识",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#前置知识","aria-hidden":"true"},"#"),e(" 前置知识")],-1),p=l(`<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><blockquote><p>练习的项目比较多，但存放于公司电脑并不是一个合适的选择（不方便随处查看） 再加上近期对 Git 使用比较多，就萌生了将项目传到 GitHub 仓库中进行管理 起初想法是在一个仓库中建立文件夹来区分项目，后来感觉并不合适（每次从别处看的时候整个分支上的内容全clone下来了） 最后发现 orphan 分支（将N个完全不同的项目作为N个分支放在同一个仓库中, 并且分支之间互不影响）完全可以解决该问题</p></blockquote><h2 id="具体步骤" tabindex="-1"><a class="header-anchor" href="#具体步骤" aria-hidden="true">#</a> 具体步骤</h2><blockquote><p>在一个git仓库下操作如下的命令</p></blockquote><p>创建orphan分支</p><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>git checkout --orphan [分支名]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>这就是创建orphan类型的分支 为什么使用orphan类型的分支 原因：将N个完全不同的项目作为N个分支放在同一个仓库中, 并且分支之间互不影响 git checkout --orphan的核心用途是在非新存储库上以类似git init的状态创建分支</p></blockquote><p>检查分支状态</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git branch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>会列出<strong>本地</strong>所有的分支</p></blockquote><p>提交代码</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git add ./
git commit -m &quot;commit branch&quot;
git push orgin [分支名]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>为什么push？ 因为本地创建了该分支后还需要提交到远程仓库，才算是真正的创建新的分支</p></blockquote><p>注意：</p><blockquote><p>创建其他orphan分支时，建议切换回主分支以后再新建 orphan 分支</p></blockquote><h2 id="扩展" tabindex="-1"><a class="header-anchor" href="#扩展" aria-hidden="true">#</a> 扩展</h2><p>切换分支：</p><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>git checkout [分支名]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>从当前分支创建新分支：</p><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>git checkout -b [新分支名]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>此时新的分支会有当前分支的所有文件</p></blockquote><h2 id="附件" tabindex="-1"><a class="header-anchor" href="#附件" aria-hidden="true">#</a> 附件</h2>`,22),g={href:"https://blog.csdn.net/Wrysmile0308/article/details/119619702",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.cnblogs.com/asdfq/p/13277559.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.codenong.com/19980631/#:~:text=git%20checkout%20--orphan,%E7%9A%84%E6%A0%B8%E5%BF%83%E7%94%A8%E9%80%94%E6%98%AF%E5%9C%A8%E9%9D%9E%E6%96%B0%E5%AD%98%E5%82%A8%E5%BA%93%E4%B8%8A%E4%BB%A5%E7%B1%BB%E4%BC%BC%20git%20init%20%E7%9A%84%E7%8A%B6%E6%80%81%E5%88%9B%E5%BB%BA%E5%88%86%E6%94%AF%E3%80%82",target:"_blank",rel:"noopener noreferrer"};function _(v,E){const o=i("RouterLink"),n=i("ExternalLinkIcon");return d(),s("div",null,[u,t("p",null,[e("需要对git命令比较熟悉，可以参考"),a(o,{to:"/notes/git/%E5%B8%B8%E7%94%A8%E7%9A%84git%E5%91%BD%E4%BB%A4.html"},{default:c(()=>[e("常用的git命令")]),_:1})]),p,t("p",null,[e("参考："),t("a",g,[e("https://blog.csdn.net/Wrysmile0308/article/details/119619702"),a(n)]),e(" 参考2："),t("a",b,[e("https://www.cnblogs.com/asdfq/p/13277559.html"),a(n)]),e(" 参考3："),t("a",m,[e("git checkout –orphan是做什么用的"),a(n)])])])}const B=r(h,[["render",_],["__file","使用 GitHub 的单个仓库管理多个项目.html.vue"]]);export{B as default};
