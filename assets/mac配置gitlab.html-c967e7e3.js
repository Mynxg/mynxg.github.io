import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as r,c as d,b as e,d as t,a,f as i}from"./app-06f50d85.js";const o={},c=i(`<p>使用ssh方式拉取gitlab仓库代码</p><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>在公司mac电脑上需要将gitee仓库代码迁移到公司gitlab代码仓库中，而我习惯使用ssh方式关联git仓库。我也喜欢使用下面简单粗暴的方式来配置git，之前玩git在window10系统上玩的比较多，各种操作都玩过，比如：创建分支、切换分支、分支代码合并、单文件历史查看、当前文件与上一个版本文件进行比对、各个分支各自的用处等。<br> 再扯点，我使用过idea和Android提交代码，并且它们提交的方式差不多，我也使用svn提交代码，但觉得并不优雅。我通常使用两种方式来提交代码，一种是命令方式、一种是可视化方式，点点就行。高级一点的方式就是Sourcetree。</p><h2 id="执行步骤" tabindex="-1"><a class="header-anchor" href="#执行步骤" aria-hidden="true">#</a> 执行步骤</h2><h3 id="_1、配置" tabindex="-1"><a class="header-anchor" href="#_1、配置" aria-hidden="true">#</a> 1、配置</h3><blockquote><p><strong>以下命令</strong>都是在终端中进入 /Users/<strong>用户/.ssh目录下</strong>执行下面的命令：</p></blockquote><p>1.1手动方式配置<br> config文件</p><blockquote><p>.ssh/目录下，如果没有config文件，需要创建一个config<br> 创建命令方式：touch config</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># gitlab
Host gitlab.com
  HostName gitlab.com 
  IdentityFile ~/.ssh/id_rsa_gitlab
  User usertest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>.gitconfig文件</p><blockquote><p>用户目录下，根据实际情况查找</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[user]
	name = usertest
	email = test@qq.com
[core]
	autocrlf = input
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),u=e("p",null,[t("windows 和 Mac 协同开发，会碰到一个问题:"),e("br"),t(" 提示修改 git core.autocrlf，"),e("br"),t(" 这个是由于编辑器的不同或者Windows程序员在跨平台项目中的文件行尾加入了回车换行符， 一些细微的空格变化会不经意地进入大家合作的工作或提交的补丁中。")],-1),h={href:"https://blog.csdn.net/u012364372/article/details/123215289",target:"_blank",rel:"noopener noreferrer"},b=e("p",null,"在Mac上设置 autocrlf = input, 在Windows上设置autocrlf = true（默认值）",-1),g=i(`<p>1.2 命令方式：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git config --global user.name &quot;your_name&quot; 
git config --global user.email &quot;your_email@qq.com&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、生成秘钥" tabindex="-1"><a class="header-anchor" href="#_2、生成秘钥" aria-hidden="true">#</a> 2、生成秘钥</h3><p>生成秘钥：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ssh-keygen -t rsa -C &quot;your_email@qq.com&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),m={href:"https://blog.nnxx.me/posts/e238cc11.html",target:"_blank",rel:"noopener noreferrer"},p=i(`<h3 id="_3、验证是否成功" tabindex="-1"><a class="header-anchor" href="#_3、验证是否成功" aria-hidden="true">#</a> 3、验证是否成功</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ssh git@gitlab.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>自建的gitlab仓库地址不同，根据实际情况更改。</p></blockquote><h3 id="_4、在gitlab远程仓库配置ssh秘钥" tabindex="-1"><a class="header-anchor" href="#_4、在gitlab远程仓库配置ssh秘钥" aria-hidden="true">#</a> 4、在gitlab远程仓库配置ssh秘钥</h3>`,4),v={href:"https://blog.csdn.net/XX_123_1_RJ/article/details/103332668",target:"_blank",rel:"noopener noreferrer"},_=e("blockquote",null,[e("p",null,"不同版本的gitlab的SSH keys秘钥配置位置有细微的差别，自行在设置中找到")],-1),x=e("h2",{id:"附件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#附件","aria-hidden":"true"},"#"),t(" 附件")],-1),f={href:"https://blog.csdn.net/nxg0916/article/details/135911954",target:"_blank",rel:"noopener noreferrer"},q={href:"https://blog.nnxx.me/posts/e238cc11.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://blog.nnxx.me/posts/de0da321.html",target:"_blank",rel:"noopener noreferrer"},w=i(`<p>再啰嗦点：</p><p>提交代码最关键的几步：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git status
git pull
git status
git add .
git commit -m &quot;描述&quot;
git push
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：在提交代码之前，先拉取代码，再提交代码。</p></blockquote>`,4);function y(N,S){const n=l("ExternalLinkIcon");return r(),d("div",null,[c,e("blockquote",null,[u,e("p",null,[t("参考："),e("a",h,[t("https://blog.csdn.net/u012364372/article/details/123215289"),a(n)])]),b]),g,e("blockquote",null,[e("p",null,[t("具体git配置ssh秘钥请移步："),e("a",m,[t("git账号多配置"),a(n)])])]),p,e("p",null,[t("参考："),e("a",v,[t("Mac 配置Git与常用命令_mac git配置"),a(n)])]),_,x,e("p",null,[t("参考："),e("a",f,[t("https://blog.csdn.net/nxg0916/article/details/135911954"),a(n)])]),e("p",null,[e("a",q,[t("git账号多配置"),a(n)])]),e("p",null,[e("a",k,[t("git提交代码到本地分支"),a(n)])]),w])}const E=s(o,[["render",y],["__file","mac配置gitlab.html.vue"]]);export{E as default};
