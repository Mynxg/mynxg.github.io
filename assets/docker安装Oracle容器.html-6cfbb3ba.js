import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as r,c as o,b as e,d as a,a as s,f as l}from"./app-b652ea8e.js";const c={},d=e("blockquote",null,[e("p",null,"使用docker方式手动方式安装各类容器（服务）")],-1),p={href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"},u=e("h2",{id:"安装oracle",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装oracle","aria-hidden":"true"},"#"),a(" 安装Oracle")],-1),v={href:"https://blog.csdn.net/javaboyweng/article/details/125486242",target:"_blank",rel:"noopener noreferrer"},b={href:"https://developer.aliyun.com/article/1025085",target:"_blank",rel:"noopener noreferrer"},m={href:"https://cloud.tencent.com/developer/article/2177523",target:"_blank",rel:"noopener noreferrer"},h={href:"https://hub.docker.com/r/akaiot/oracle_11g",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.bilibili.com/video/BV1sf4y177md",target:"_blank",rel:"noopener noreferrer"},k=l(`<p>这里使用云服务器，通过docker方式安装Oracle容器</p><blockquote><p>服务器使用的是2核4G的，</p></blockquote><h3 id="操作" tabindex="-1"><a class="header-anchor" href="#操作" aria-hidden="true">#</a> 操作</h3><blockquote><p>前置知识需要熟悉docker常用命令</p></blockquote><p>拉取镜像</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动容器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run -d -it -p 1521:1521 \\
--name oracle \\
--restart=always \\
--mount source=oracle_vol,target=/home/oracle/app/oracle/oradata registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),_=e("p",null,"--mount source=oracle_vol,",-1),x=e("p",null,"target=/home/oracle/app/oracle/oradata ，服务器本地目录，可以自定义，比如：/root/docker-data/oracle/oracledata",-1),f={href:"http://registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g",target:"_blank",rel:"noopener noreferrer"},E=l(`<p>修改文件，先进入容器内，执行一下操作：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker exec -it oracle /bin/bash 
#切换root用户 
su root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后输入密码</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#密码:
helowin 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改<code>/etc/profile</code>文件，将ORACLE_HOME和ORACLE_SID配置到其中，然后生效。<br> 输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vi /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#配置内容</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">ORACLE_HOME</span><span class="token operator">=</span>/home/oracle/app/oracle/product/11.2.0/dbhome_2 
<span class="token builtin class-name">export</span> <span class="token assign-left variable">ORACLE_SID</span><span class="token operator">=</span>helowin
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$ORACLE_HOME</span>/bin:<span class="token environment constant">$PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>--restart</code>表示docker重启是容器自动重启</p><p><code>--mount</code>表示要将Host上的路径挂载到容器中</p><p>export ORACLE_SID=helowin ，ORACLE_SID=自定义sid，后面连接的时候会用到</p></blockquote><p>然后让配置文件生效：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#配置文件生效</span>
<span class="token builtin class-name">source</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,10),y={href:"https://so.csdn.net/so/search?q=%E8%BD%AF%E8%BF%9E%E6%8E%A5&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},O=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token variable">$ORACLE_HOME</span>/bin/sqlplus /usr/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>登录sqlplus</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#切换回oracle用户</span>
<span class="token function">su</span> oracle
<span class="token comment"># 启动了一个客户端进程</span>
sqlplus /nolog
<span class="token comment"># 连接身份</span>
connect / as sysdba
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#修改system帐号的密码</span>
alter user system identified by 密码<span class="token punctuation">;</span>
<span class="token comment">#修改sys帐号的密码</span>
alter user sys identified by 密码<span class="token punctuation">;</span>
<span class="token comment"># 设置密码永不过期：</span>
alter profile default limit PASSWORD_LIFE_TIME UNLIMITED<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建一个用户(看自己了)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#创建用户</span>
create user jiefei identified by 用户名<span class="token punctuation">;</span>
<span class="token comment">#赋权限给用户</span>
grant connect,resource,dba to 用户名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>顺带修改一下连接次数：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>alter system <span class="token builtin class-name">set</span> <span class="token assign-left variable">processes</span><span class="token operator">=</span><span class="token number">1000</span> <span class="token assign-left variable">scope</span><span class="token operator">=</span>spfile<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>还有一步，修改以上信息后，需要重新启动数据库；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conn /as sysdba
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>数据库服务关闭：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">shutdown</span> immediate<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>数据库服务启动：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>startup <span class="token function">open</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>退出软链接：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">exit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="工具连接" tabindex="-1"><a class="header-anchor" href="#工具连接" aria-hidden="true">#</a> 工具连接</h3><p>使用的是Navicat Premium16工具连接Oracle数据库进行测试。</p>`,18),q={href:"https://blogs.lxip.top/questionskills/software/tool.html",target:"_blank",rel:"noopener noreferrer"},L=l(`<h3 id="可能遇到问题" tabindex="-1"><a class="header-anchor" href="#可能遇到问题" aria-hidden="true">#</a> 可能遇到问题</h3><p>当执行修改密码的时候出现 ： database not open</p><p>解决办法：</p><p>输入：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>alter database <span class="token function">mount</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输入 ：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>alter database <span class="token function">open</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后就可修改数据库密码的命令了</p><p>改完之后输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>刷新下表</p><blockquote><p>exit 表示退出sql，软连接 i</p></blockquote>`,12);function I(A,w){const n=t("ExternalLinkIcon");return r(),o("div",null,[d,e("p",null,[a("镜像查找方式："),e("a",p,[a("https://hub.docker.com/"),s(n)])]),u,e("blockquote",null,[e("p",null,[a("参考1："),e("a",v,[a("https://blog.csdn.net/javaboyweng/article/details/125486242"),s(n)])]),e("p",null,[a("参考2："),e("a",b,[a("Docker-14：Docker安装Oracle11g"),s(n)]),a(" (赞)")]),e("p",null,[a("参考3：["),e("a",m,[a("docker安装Oracle数据库-腾讯云开发者社区-腾讯云 (tencent.com)"),s(n)]),a("] (赞)")]),e("p",null,[a("镜像："),e("a",h,[a("https://hub.docker.com/r/akaiot/oracle_11g"),s(n)])]),e("p",null,[a("安装视频教程："),e("a",g,[a("参考"),s(n)])])]),k,e("blockquote",null,[_,x,e("p",null,[e("a",f,[a("registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g"),s(n)])])]),E,e("p",null,[a("创建"),e("a",y,[a("软连接"),s(n)])]),O,e("blockquote",null,[e("p",null,[a("工具下载："),e("a",q,[a("参考这里"),s(n)])])]),L])}const T=i(c,[["render",I],["__file","docker安装Oracle容器.html.vue"]]);export{T as default};
