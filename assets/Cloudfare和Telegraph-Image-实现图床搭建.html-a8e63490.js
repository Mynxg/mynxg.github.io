import{aP as r,Q as o,S as l,U as e,ac as a,ae as n,aQ as i,E as p}from"./framework-1a3f7ddc.js";const g={},c=i('<blockquote><p>基于Cloudflare Pages服务和开源图床项目Telegraph来实现免费使用图床。</p><p>核心原理就是利用Cloudflare Workers和Pages的免费额度，将图床系统和图片储存都托管在Cloudflare网络中，从而实现一毛不拔</p></blockquote><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>想有个免费、稳定、访问速度还可以的，并且就算图片丢失也没问题的图床工具，于是就有了Telegraph-Image。</p><h2 id="部署和配置" tabindex="-1"><a class="header-anchor" href="#部署和配置" aria-hidden="true">#</a> 部署和配置</h2><h3 id="fork-仓库-和-部署telegraph-image-静态资源" tabindex="-1"><a class="header-anchor" href="#fork-仓库-和-部署telegraph-image-静态资源" aria-hidden="true">#</a> fork 仓库 和 部署Telegraph-Image 静态资源</h3>',5),s={href:"https://github.com/cf-pages/Telegraph-Image",target:"_blank",rel:"noopener noreferrer"},d=i(`<p>首先点击创建一个应用( create application )： <img src="https://img.nnxx.me/file/0a4d1702892892007890c.png" alt="" loading="lazy"></p><p>选择 Pages ，点击关联自己的Github仓库，然后选择克隆后的 Telegraph-Image 仓库 <img src="https://img.nnxx.me/file/94ae08aabc2a6fe4ee91c.png" alt="" loading="lazy"></p><p>点击 Telegraph-Image 仓库，然后部署即可。</p><figure><img src="https://img.nnxx.me/file/e2ac933717a0c9840efb4.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>部署后的效果图： <img src="https://img.nnxx.me/file/e1fcfc5881514a4f02961.png" alt="" loading="lazy"></p><p>配置环境变量：BASIC_USER、BASIC_PASS、ModerateContentApiKey</p><blockquote><p>用于图床后台管理</p><p>BASIC_USER：用户名</p><p>BASIC_PASS：密码</p><p>ModerateContentApiKey： 用于图片内容审查的API</p></blockquote><p>ModerateContentApiKey获取地址API的key：<a href="moderatecontent.com">moderatecontent.com</a></p><figure><img src="https://img.nnxx.me/file/1c59abff1132c1fdf0955.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="创建-kv-存储空间" tabindex="-1"><a class="header-anchor" href="#创建-kv-存储空间" aria-hidden="true">#</a> 创建 KV 存储空间</h3><p>然后需要创建 KV 作为图片的存储空间</p><p>创建 命名空间： <img src="https://img.nnxx.me/file/529ea5cd707af55ca1756.png" alt="" loading="lazy"></p><p>效果： <img src="https://img.nnxx.me/file/296e6c1b13d4478a3c8ac.png" alt="" loading="lazy"></p><p>找到Functions（函数）---&gt; KV name space bindings ----&gt; Production ，点击 Edit bindings (编辑绑定)，添加绑定 KV 的命名空间的变量名和变量值。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Variable name        KV  namespace
img_url                  img_url
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>KV namespace获取的地方就是刚刚创建的 KV 的命名空间</p></blockquote><figure><img src="https://img.nnxx.me/file/6bfb90aadb091fed56cac.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>最后，就需要重新部署即可使配置生效。 <img src="https://img.nnxx.me/file/48603ba898bf2851a4b35.png" alt="" loading="lazy"></p><h2 id="定制域名" tabindex="-1"><a class="header-anchor" href="#定制域名" aria-hidden="true">#</a> 定制域名</h2><p>找到telegraph-image部署后的地方，点击 Custom domains(定制域名)，然后选择 Set up a custom domain ，</p><figure><img src="https://img.nnxx.me/file/fb1d1d01a2f8b9564b30a.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>输入自己的域名（不限于二级域名），然后点击下一步。 <img src="https://img.nnxx.me/file/3543247c76749c360aa9e.png" alt="" loading="lazy"></p><h2 id="登录图床后台" tabindex="-1"><a class="header-anchor" href="#登录图床后台" aria-hidden="true">#</a> 登录图床后台</h2>`,23),h={href:"https://telegraph-image-xxx.pages.dev/admin",target:"_blank",rel:"noopener noreferrer"},m={href:"http://img.a.com",target:"_blank",rel:"noopener noreferrer"},f={href:"https://img.a.com/admin",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,"然后输入上述配置的环境变量中的用户名和密码",-1),_=e("h2",{id:"附件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#附件","aria-hidden":"true"},"#"),a(" 附件")],-1),b={href:"https://mp.weixin.qq.com/s/hbpCxE3dYZY1sgt2H3JffA",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/cf-pages/Telegraph-Image",target:"_blank",rel:"noopener noreferrer"};function k(I,C){const t=p("ExternalLinkIcon");return o(),l("div",null,[c,e("p",null,[a("将 "),e("a",s,[a("https://github.com/cf-pages/Telegraph-Image"),n(t)]),a(" 这个仓库克隆到自己的仓库，然后通过cloudfare中Workers & Pages ，将克隆好的Github仓库关联，然后进行部署，基本上是点下一步下一步。")]),d,e("p",null,[a("后台地址示例："),e("a",h,[a("https://telegraph-image-xxx.pages.dev/admin"),n(t)])]),e("blockquote",null,[e("p",null,[a("根据自己的时间情况而定，比如你这仓库绑定的域名是 "),e("a",m,[a("img.a.com"),n(t)])]),e("p",null,[a("那么后台地址就是： "),e("a",f,[a("https://img.a.com/admin"),n(t)])]),u]),_,e("blockquote",null,[e("p",null,[a("参考："),e("a",b,[a("保姆级教程：使用Cloudflare+Telegraph搭建零成本图床系统 (qq.com)"),n(t)])]),e("p",null,[a("项目地址："),e("a",x,[a("https://github.com/cf-pages/Telegraph-Image"),n(t)])])])])}const y=r(g,[["render",k],["__file","Cloudfare和Telegraph-Image-实现图床搭建.html.vue"]]);export{y as default};
