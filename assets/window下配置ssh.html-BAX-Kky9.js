import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,h as a,o as i}from"./app-tMjQf_mi.js";const l={};function t(p,s){return i(),e("div",null,s[0]||(s[0]=[a(`<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p>在window下使用git，我习惯使用ssh方式进行拉取推送代码，其他方式流程就没有这么繁琐了。为什么使用SSH方式呢，我不想每次切换不同账号的时候重复输入密码，像github不支持直接输入密码，建议使用ssh方式。gitlab、云效等支持输入访问令牌方式连接远程仓库。</p><h2 id="ssh配置" tabindex="-1"><a class="header-anchor" href="#ssh配置"><span>ssh配置</span></a></h2><h3 id="配置ssh-cofnig文件" tabindex="-1"><a class="header-anchor" href="#配置ssh-cofnig文件"><span>配置ssh cofnig文件</span></a></h3><blockquote><p>在C:\\Users\\catcat\\.ssh目录下创建 <strong>config</strong> 文件，并自由添加需要的配置</p><p>这里的catcat表示window电脑对应的用户名，每个电脑的用户名都是自己设置的，自行修改即可。</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># GitHub</span></span>
<span class="line"><span>Host github.com</span></span>
<span class="line"><span>    HostName github.com</span></span>
<span class="line"><span>    PreferredAuthentications publickey</span></span>
<span class="line"><span>    IdentityFile ~/.ssh/id_ed25519_github_mytest</span></span>
<span class="line"><span>    User mytest</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span># Github2</span></span>
<span class="line"><span>Host imtest.github.com</span></span>
<span class="line"><span>    HostName github.com</span></span>
<span class="line"><span>    PreferredAuthentications publickey</span></span>
<span class="line"><span>    IdentityFile ~/.ssh/id_ed25519_github_imtest</span></span>
<span class="line"><span>    User imtest    </span></span>
<span class="line"><span></span></span>
<span class="line"><span># gitee</span></span>
<span class="line"><span>Host gitee.com</span></span>
<span class="line"><span>    HostName gitee.com</span></span>
<span class="line"><span>    PreferredAuthentications publickey</span></span>
<span class="line"><span>    IdentityFile ~/.ssh/id_ed25519_gitee_mytest</span></span>
<span class="line"><span>    User mytest    	</span></span>
<span class="line"><span></span></span>
<span class="line"><span># gitee</span></span>
<span class="line"><span>Host imtest.gitee.com</span></span>
<span class="line"><span>    HostName gitee.com</span></span>
<span class="line"><span>    PreferredAuthentications publickey</span></span>
<span class="line"><span>    IdentityFile ~/.ssh/id_ed25519_gitee_imtest</span></span>
<span class="line"><span>    User imtest 	</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span># gitee</span></span>
<span class="line"><span>Host gitcode.net</span></span>
<span class="line"><span>    HostName gitcode.net</span></span>
<span class="line"><span>    PreferredAuthentications publickey</span></span>
<span class="line"><span>    IdentityFile ~/.ssh/id_ed25519_gitcode_nxgtest</span></span>
<span class="line"><span>    User test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>为什么配置两个github呢，我是想分开两个账号的公钥，虽然可以共用一个公钥，但是我还是习惯于分开。</p></blockquote><h3 id="生成秘钥" tabindex="-1"><a class="header-anchor" href="#生成秘钥"><span>生成秘钥</span></a></h3><p>在目录下执行：</p><blockquote><p>位置：C:\\Users\\catcat\\.ssh</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>ssh-keygen -t ed25519 -C &quot;&lt;注释内容&gt;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>推荐使用<strong>ed25519</strong>算法方式生成秘钥</p></blockquote><p>生成效果：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> catcat    .ssh     0ms⠀   ssh-keygen -t ed25519 -C &quot;mytest@qq.com&quot;             pwsh   96  15:48:07 </span></span>
<span class="line"><span>Generating public/private ed25519 key pair.</span></span>
<span class="line"><span>Enter file in which to save the key (C:\\Users\\catcat/.ssh/id_ed25519):</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入自定义的名称，并回车</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> catcat    .ssh     0ms⠀   ssh-keygen -t ed25519 -C &quot;mytest@qq.com&quot;             pwsh   96  15:48:07 </span></span>
<span class="line"><span>Generating public/private ed25519 key pair.</span></span>
<span class="line"><span>Enter file in which to save the key (C:\\Users\\catcat/.ssh/id_ed25519): id_ed25519_github_mytest</span></span>
<span class="line"><span>Enter passphrase (empty for no passphrase):</span></span>
<span class="line"><span>Enter same passphrase again:</span></span>
<span class="line"><span>Your identification has been saved in id_ed25519_github_mytest</span></span>
<span class="line"><span>Your public key has been saved in id_ed25519_github_mytest.pub</span></span>
<span class="line"><span>The key fingerprint is:</span></span>
<span class="line"><span>SHA256:FREWfhgLoEWqn21ewQWE65s+MGFoamjj0CWQvHG124 mytest@qq.com</span></span>
<span class="line"><span>The key&#39;s randomart image is:</span></span>
<span class="line"><span>+--[ED25519 256]--+</span></span>
<span class="line"><span>|+.    .. .+      |</span></span>
<span class="line"><span>|o. . .  ..o+     |</span></span>
<span class="line"><span>| .. .    oo+     |</span></span>
<span class="line"><span>|.  . .   .+ .    |</span></span>
<span class="line"><span>|.o+ o o S  .     |</span></span>
<span class="line"><span>|+o *o*           |</span></span>
<span class="line"><span>|+ =**..          |</span></span>
<span class="line"><span>|=o+++o.          |</span></span>
<span class="line"><span>|B*o.+E.          |</span></span>
<span class="line"><span>+----[SHA256]-----+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置远程仓库ssh秘钥" tabindex="-1"><a class="header-anchor" href="#配置远程仓库ssh秘钥"><span>配置远程仓库SSH秘钥</span></a></h3><p>将<strong>id_ed25519_github_mytest.pub</strong>文件里里的秘钥复制粘贴到 <strong>SSH秘钥</strong>位置，具体细节就不展开了。</p><h2 id="配置全局git提交邮箱和用户信息" tabindex="-1"><a class="header-anchor" href="#配置全局git提交邮箱和用户信息"><span>配置全局git提交邮箱和用户信息</span></a></h2><p>在C:\\Users\\catcat目录下增加 .gitconfig 文件，并添加以下配置：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[user]</span></span>
<span class="line"><span>	email = mytest@qq.com</span></span>
<span class="line"><span>	name = mytest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="附件" tabindex="-1"><a class="header-anchor" href="#附件"><span>附件</span></a></h2><p>详细操作看这里<a href="https://help.aliyun.com/zh/yunxiao/user-guide/configure-ssh-key" target="_blank" rel="noopener noreferrer">配置 SSH 密钥</a></p>`,23)]))}const r=n(l,[["render",t],["__file","window下配置ssh.html.vue"]]),h=JSON.parse('{"path":"/java/git/window%E4%B8%8B%E9%85%8D%E7%BD%AEssh.html","title":"window下配置ssh","lang":"zh-CN","frontmatter":{"title":"window下配置ssh","icon":"feather-pointed","category":["运维"],"tag":["git"],"sticky":false,"star":false,"article":true,"timeline":true,"order":1,"author":"nxg","date":"2024-07-02T00:00:00.000Z","gitInclude":[],"description":"背景 在window下使用git，我习惯使用ssh方式进行拉取推送代码，其他方式流程就没有这么繁琐了。为什么使用SSH方式呢，我不想每次切换不同账号的时候重复输入密码，像github不支持直接输入密码，建议使用ssh方式。gitlab、云效等支持输入访问令牌方式连接远程仓库。 ssh配置 配置ssh cofnig文件 在C:\\\\Users\\\\catcat\\\\...","head":[["meta",{"property":"og:url","content":"https://blog.lxip.top/java/git/window%E4%B8%8B%E9%85%8D%E7%BD%AEssh.html"}],["meta",{"property":"og:site_name","content":"所遇所思"}],["meta",{"property":"og:title","content":"window下配置ssh"}],["meta",{"property":"og:description","content":"背景 在window下使用git，我习惯使用ssh方式进行拉取推送代码，其他方式流程就没有这么繁琐了。为什么使用SSH方式呢，我不想每次切换不同账号的时候重复输入密码，像github不支持直接输入密码，建议使用ssh方式。gitlab、云效等支持输入访问令牌方式连接远程仓库。 ssh配置 配置ssh cofnig文件 在C:\\\\Users\\\\catcat\\\\..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"nxg"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:published_time","content":"2024-07-02T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"window下配置ssh\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-02T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"nxg\\"}]}"]]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"ssh配置","slug":"ssh配置","link":"#ssh配置","children":[{"level":3,"title":"配置ssh cofnig文件","slug":"配置ssh-cofnig文件","link":"#配置ssh-cofnig文件","children":[]},{"level":3,"title":"生成秘钥","slug":"生成秘钥","link":"#生成秘钥","children":[]},{"level":3,"title":"配置远程仓库SSH秘钥","slug":"配置远程仓库ssh秘钥","link":"#配置远程仓库ssh秘钥","children":[]}]},{"level":2,"title":"配置全局git提交邮箱和用户信息","slug":"配置全局git提交邮箱和用户信息","link":"#配置全局git提交邮箱和用户信息","children":[]},{"level":2,"title":"附件","slug":"附件","link":"#附件","children":[]}],"readingTime":{"minutes":2.17,"words":652},"filePathRelative":"java/git/window下配置ssh.md","localizedDate":"2024年7月2日","excerpt":"","autoDesc":true}');export{r as comp,h as data};
