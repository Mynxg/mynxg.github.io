{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "所遇所思",
  "home_page_url": "https://blog.lxip.top/",
  "feed_url": "https://blog.lxip.top/feed.json",
  "description": "记录笔记",
  "items": [
    {
      "title": "git实时拉取GitHub仓库代码",
      "url": "https://blog.lxip.top/notes/git/git%E5%AE%9E%E6%97%B6%E6%8B%89%E5%8F%96GitHub%E4%BB%93%E5%BA%93%E4%BB%A3%E7%A0%81.html",
      "id": "https://blog.lxip.top/notes/git/git%E5%AE%9E%E6%97%B6%E6%8B%89%E5%8F%96GitHub%E4%BB%93%E5%BA%93%E4%BB%A3%E7%A0%81.html",
      "summary": "首先你需要有一个gitee账号和一个GitHub账号 （gitee需要绑定手机号并且需要绑定对应的GitHub账号） 使用gitee仓库镜像管理（目前是限时开放） 直接上效果图： 选择直接需要同步的仓库 获取GitHub私人令牌的方式简单贴一张图： 具体如何创建GitHub私人令牌步骤就不展开了 效果如下：",
      "content_html": "<p>首先你需要有一个gitee账号和一个GitHub账号\n（gitee需要绑定手机号并且需要绑定对应的GitHub账号）</p>\n<p>使用gitee仓库镜像管理（目前是限时开放）</p>\n<p>直接上效果图：\n</p>\n<blockquote>\n<p>选择直接需要同步的仓库</p>\n</blockquote>\n<p>获取GitHub私人令牌的方式简单贴一张图：\n\n具体如何创建GitHub私人令牌步骤就不展开了</p>\n<p>效果如下：\n</p>\n",
      "date_published": "2023-04-16T00:00:00.000Z",
      "date_modified": "2023-04-17T06:04:06.648Z",
      "authors": [],
      "tags": [
        "运维"
      ]
    },
    {
      "title": "常用的git命令",
      "url": "https://blog.lxip.top/notes/git/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html",
      "id": "https://blog.lxip.top/notes/git/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html",
      "summary": "记录目前常用到的基本命令 常用命令 提交代码的步骤 检查当前文件状态： 提交代码：>注意：可以不需要斜杠 推送代码到远程仓库：>将本地仓库中的，当前main分支的代码提交到远程仓库 扩展 创建分支> 这就是创建orphan类型的分支，其他步骤就是简单的提交代操作了。 检查分支状态>会列出本地所有的分支 查看所有分支>列出所有的分支(远程和本地) 切换分...",
      "content_html": "<blockquote>\n<p>记录目前常用到的基本命令</p>\n</blockquote>\n<h2> 常用命令</h2>\n<h3> 提交代码的步骤</h3>\n<p>检查当前文件状态：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>提交代码：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>注意：可以不需要斜杠</p>\n</blockquote>\n<div class=\"language-git line-numbers-mode\" data-ext=\"git\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>推送代码到远程仓库：</p>\n<div class=\"language-git line-numbers-mode\" data-ext=\"git\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>将本地仓库中的，当前main分支的代码提交到远程仓库</p>\n</blockquote>\n<h3> 扩展</h3>\n<p>创建分支</p>\n<div class=\"language-git line-numbers-mode\" data-ext=\"git\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>这就是创建orphan类型的分支，其他步骤就是简单的提交代操作了。</p>\n</blockquote>\n<p>检查分支状态</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>会列出<strong>本地</strong>所有的分支</p>\n</blockquote>\n<p>查看所有分支</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>列出所有的分支(远程和本地)</p>\n</blockquote>\n<p>切换分支：</p>\n<div class=\"language-git line-numbers-mode\" data-ext=\"git\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>从当前分支创建新分支：</p>\n<div class=\"language-git line-numbers-mode\" data-ext=\"git\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>此时新的分支会有当前分支的所有文件</p>\n</blockquote>\n<h2> 附件</h2>\n<p>命令大全：\n</p>\n<p>参考：<a href=\"https://www.runoob.com/note/56524\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.runoob.com/note/56524</a></p>\n",
      "date_published": "2023-04-16T00:00:00.000Z",
      "date_modified": "2023-04-17T06:04:06.660Z",
      "authors": [],
      "tags": [
        "运维"
      ]
    },
    {
      "title": "使用 GitHub 的单个仓库管理多个项目",
      "url": "https://blog.lxip.top/notes/git/%E4%BD%BF%E7%94%A8%20GitHub%20%E7%9A%84%E5%8D%95%E4%B8%AA%E4%BB%93%E5%BA%93%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AA%E9%A1%B9%E7%9B%AE.html",
      "id": "https://blog.lxip.top/notes/git/%E4%BD%BF%E7%94%A8%20GitHub%20%E7%9A%84%E5%8D%95%E4%B8%AA%E4%BB%93%E5%BA%93%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AA%E9%A1%B9%E7%9B%AE.html",
      "summary": "前置知识 需要对git命令比较熟悉，可以参考常用的git命令 (常用的git命令.md) 背景 练习的项目比较多，但存放于公司电脑并不是一个合适的选择（不方便随处查看） 再加上近期对 Git 使用比较多，就萌生了将项目传到 GitHub 仓库中进行管理 起初想法是在一个仓库中建立文件夹来区分项目，后来感觉并不合适（每次从别处看的时候整个分支上的内容全c...",
      "content_html": "<h2> 前置知识</h2>\n<p>需要对git命令比较熟悉，可以参考<a href=\"/notes/git/%E5%B8%B8%E7%94%A8%E7%9A%84git%E5%91%BD%E4%BB%A4.html\" target=\"blank\">常用的git命令</a></p>\n<h2> 背景</h2>\n<blockquote>\n<p>练习的项目比较多，但存放于公司电脑并不是一个合适的选择（不方便随处查看）\n再加上近期对 Git 使用比较多，就萌生了将项目传到 GitHub 仓库中进行管理\n起初想法是在一个仓库中建立文件夹来区分项目，后来感觉并不合适（每次从别处看的时候整个分支上的内容全clone下来了）\n最后发现 orphan 分支（将N个完全不同的项目作为N个分支放在同一个仓库中, 并且分支之间互不影响）完全可以解决该问题</p>\n</blockquote>\n<h2> 具体步骤</h2>\n<blockquote>\n<p>在一个git仓库下操作如下的命令</p>\n</blockquote>\n<p>创建orphan分支</p>\n<div class=\"language-git line-numbers-mode\" data-ext=\"git\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>这就是创建orphan类型的分支\n为什么使用orphan类型的分支\n原因：将N个完全不同的项目作为N个分支放在同一个仓库中, 并且分支之间互不影响\ngit checkout --orphan的核心用途是在非新存储库上以类似git init的状态创建分支</p>\n</blockquote>\n<p>检查分支状态</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>会列出<strong>本地</strong>所有的分支</p>\n</blockquote>\n<p>提交代码</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>为什么push？\n因为本地创建了该分支后还需要提交到远程仓库，才算是真正的创建新的分支</p>\n</blockquote>\n<p>注意：</p>\n<blockquote>\n<p>创建其他orphan分支时，建议切换回主分支以后再新建 orphan 分支</p>\n</blockquote>\n<h2> 扩展</h2>\n<p>切换分支：</p>\n<div class=\"language-git line-numbers-mode\" data-ext=\"git\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>从当前分支创建新分支：</p>\n<div class=\"language-git line-numbers-mode\" data-ext=\"git\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p>此时新的分支会有当前分支的所有文件</p>\n</blockquote>\n<h2> 附件</h2>\n<p>参考：<a href=\"https://blog.csdn.net/Wrysmile0308/article/details/119619702\" target=\"_blank\" rel=\"noopener noreferrer\">https://blog.csdn.net/Wrysmile0308/article/details/119619702</a>\n参考2：<a href=\"https://www.cnblogs.com/asdfq/p/13277559.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.cnblogs.com/asdfq/p/13277559.html</a>\n参考3：<a href=\"https://www.codenong.com/19980631/#:~:text=git%20checkout%20--orphan,%E7%9A%84%E6%A0%B8%E5%BF%83%E7%94%A8%E9%80%94%E6%98%AF%E5%9C%A8%E9%9D%9E%E6%96%B0%E5%AD%98%E5%82%A8%E5%BA%93%E4%B8%8A%E4%BB%A5%E7%B1%BB%E4%BC%BC%20git%20init%20%E7%9A%84%E7%8A%B6%E6%80%81%E5%88%9B%E5%BB%BA%E5%88%86%E6%94%AF%E3%80%82\" target=\"_blank\" rel=\"noopener noreferrer\">git checkout –orphan是做什么用的</a></p>\n",
      "date_published": "2023-04-16T00:00:00.000Z",
      "date_modified": "2023-04-17T06:04:06.668Z",
      "authors": [],
      "tags": [
        "运维"
      ]
    },
    {
      "title": "PicGo配置多图床仓库",
      "url": "https://blog.lxip.top/questionskills/techguide/picgo%E4%BD%BF%E7%94%A8%E5%A4%9A%E5%9B%BE%E5%BA%8A.html",
      "id": "https://blog.lxip.top/questionskills/techguide/picgo%E4%BD%BF%E7%94%A8%E5%A4%9A%E5%9B%BE%E5%BA%8A.html",
      "summary": "背景 想使用不需要直接购买服务器就可以存储图片，并且可以很方便使用外链访问到图片资源。这里就有了typora+PicGo两者结合的工具 PicGo配置多图床 以七牛云为例： 官网：https://portal.qiniu.com/ 七牛云有10G免费存储空间和10G CDN静态资源加速 注意：CDN超额会需要付费的。 参考此文：配置手册 | PicGo...",
      "content_html": "<h2> 背景</h2>\n<p>想使用不需要直接购买服务器就可以存储图片，并且可以很方便使用外链访问到图片资源。这里就有了typora+PicGo两者结合的工具</p>\n<h2> PicGo配置多图床</h2>\n<p>以七牛云为例：</p>\n<blockquote>\n<p>官网：<a href=\"https://portal.qiniu.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://portal.qiniu.com/</a></p>\n<p>七牛云有10G免费存储空间和10G CDN静态资源加速</p>\n<p>注意：CDN超额会需要付费的。</p>\n</blockquote>\n<p>参考此文：<a href=\"https://picgo.github.io/PicGo-Doc/zh/guide/config.html#%E4%B8%83%E7%89%9B%E5%9B%BE%E5%BA%8A\" target=\"_blank\" rel=\"noopener noreferrer\">配置手册 | PicGo</a></p>\n<p>PicGo配置如下图：</p>\n<figure><figcaption>image-20230408153157066</figcaption></figure>\n<p>个人密钥：</p>\n<p>参考：<a href=\"https://portal.qiniu.com/user/key\" target=\"_blank\" rel=\"noopener noreferrer\">七牛云 - 密钥管理 (qiniu.com)</a></p>\n<figure><figcaption>image-20230408153612643</figcaption></figure>\n<p>空间名称：</p>\n<p>我自定义的空间名称为：<strong>nxg-img</strong></p>\n<figure><figcaption>image-20230408153712120</figcaption></figure>\n<p>存储区域参考这里：<a href=\"https://developer.qiniu.com/kodo/1671/region-endpoint-fq\" target=\"_blank\" rel=\"noopener noreferrer\">存储区域_产品简介_对象存储 - 七牛开发者中心 (qiniu.com)</a></p>\n<p>图片存储路径：</p>\n<p>我使用typora编辑器，就自定义了 <strong>typora</strong>目录</p>\n<figure><figcaption>image-20230408153902349</figcaption></figure>\n<blockquote>\n<p>注意：</p>\n<p>自定义域名，免费的的cdn只提供http协议，使用外链域名时，需要填写http，而不是https</p>\n<p>网址后缀的作用是：用到了七牛的图片处理工具的时候会用到的一些处理参数，比如图片瘦身</p>\n</blockquote>\n<p>如图：</p>\n<figure><figcaption>image-20230408154227916</figcaption></figure>\n<p>域名绑定：</p>\n<p>自己购买的域名，如果没有可以使用官方提供的。</p>\n<figure><figcaption>image-20230408160523741</figcaption></figure>\n<h2> 扩展</h2>\n<p>GitHub图床配置</p>\n<figure><figcaption>image-20230408155030702</figcaption></figure>\n<p>cdn加速GitHub图床：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>例如：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>参考：<a href=\"https://picgo.github.io/PicGo-Doc/zh/guide/config.html#github%E5%9B%BE%E5%BA%8A\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub配置 | PicGo</a></p>\n<p>gitee图床配置：</p>\n<figure><figcaption>image-20230408155204806</figcaption></figure>\n<p>参考：<a href=\"https://github.com/lizhuangs/picgo-plugin-gitee-uploader.git\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/lizhuangs/picgo-plugin-gitee-uploader.git</a></p>\n<h2> 附件</h2>\n<p>参考：</p>\n<p>GitHub仓库：<a href=\"https://github.com/Molunerfinn/PicGo\" target=\"_blank\" rel=\"noopener noreferrer\">Molunerfinn/PicGo</a></p>\n<p><a href=\"https://picgo.github.io/PicGo-Doc/zh/guide/config.html#%E4%B8%83%E7%89%9B%E5%9B%BE%E5%BA%8A\" target=\"_blank\" rel=\"noopener noreferrer\">配置手册 | PicGo</a></p>\n<p><a href=\"https://molunerfinn.com/PicGo/\" target=\"_blank\" rel=\"noopener noreferrer\">PicGo (molunerfinn.com)</a></p>\n",
      "date_published": "2023-04-08T14:00:00.000Z",
      "date_modified": "2023-04-17T06:04:06.673Z",
      "authors": [],
      "tags": [
        "图床"
      ]
    },
    {
      "title": "Gitee Pages Action",
      "url": "https://blog.lxip.top/notes/githubaction/gitee-pages-action.html",
      "id": "https://blog.lxip.top/notes/githubaction/gitee-pages-action.html",
      "summary": "Gitee Pages Action 由于 Gitee Pages 的访问速度很快，很多朋友会选择 Gitee Pages 部署项目（如：个人博客、开源项目国内镜像站点）。但是它不像 GitHub Pages 那样，一提交代码就能自动更新 Pages，因为 Gitee 的自动部署属于 Gitee Pages Pro 的服务。 为了实现 Gitee Pa...",
      "content_html": "<p align=\"center\">\n  <a href=\"https://github.com/yanglbme/gitee-pages-action\">\n    \n  </a>\n</p>\n<p align=\"center\">\n  <a href=\"./LICENSE\"><img src=\"https://img.shields.io/github/license/yanglbme/gitee-pages-action?color=42b883&amp;style=flat-square\" alt=\"license\"></a>\n  <a href=\"../../releases\"><img src=\"https://img.shields.io/github/v/release/yanglbme/gitee-pages-action?color=42b883&amp;style=flat-square\" alt=\"release\"></a>\n  <a href=\"#谁在使用\"><img src=\"https://shields.io/badge/who's-using-42b883?style=flat-square\" alt=\"users\"></a>\n  <a href=\"#错误及解决方案\"><img src=\"https://shields.io/badge/faq-here-42b883?style=flat-square\" alt=\"users\"></a>\n  <a href=\"https://github.com/yanglbme/gitee-pages-action\"><img src=\"https://shields.io/badge/⭐-GitHub-42b883?style=flat-square\" alt=\"github\"></a>\n  <a href=\"https://gitee.com/yanglbme/gitee-pages-action\"><img src=\"https://shields.io/badge/⭐-Gitee-42b883?style=flat-square\" alt=\"gitee\"></a><br>\n  <a href=\"https://github.com/yanglbme/gitee-pages-action/stargazers\"><img src=\"https://img.shields.io/github/stars/yanglbme/gitee-pages-action?color=42b883&amp;logo=github&amp;style=flat-square\" alt=\"stars\"></a>\n  <a href=\"https://github.com/yanglbme/gitee-pages-action/network/members\"><img src=\"https://img.shields.io/github/forks/yanglbme/gitee-pages-action?color=42b883&amp;logo=github&amp;style=flat-square\" alt=\"forks\"></a>\n</p>\n<h1 align=\"center\">Gitee Pages Action</h1>\n<p>由于 Gitee Pages 的访问速度很快，很多朋友会选择 Gitee Pages 部署项目（如：个人博客、开源项目国内镜像站点）。但是它不像 GitHub Pages 那样，一提交代码就能自动更新 Pages，因为 Gitee 的自动部署属于 Gitee Pages Pro 的服务。</p>\n<p>为了实现 Gitee Pages 的自动部署，我开发了 <a href=\"https://github.com/marketplace/actions/gitee-pages-action\" target=\"_blank\" rel=\"noopener noreferrer\">Gitee Pages Action</a> ，只需要在 GitHub 项目的 Settings 页面下配置 keys，然后在 <code>.github/workflows/</code> 下创建一个工作流，引入一些配置参数即可。欢迎 Star ⭐ 关注本项目。</p>\n<p>欢迎体验，若有使用上的问题，也欢迎随时提交 <a href=\"https://github.com/yanglbme/gitee-pages-action/issues\" target=\"_blank\" rel=\"noopener noreferrer\">Issues</a> 反馈。</p>\n<p>注：</p>\n<ol>\n<li>首次需要<strong>手动</strong>登录 Gitee ，点击“启动”进行 Gitee Pages 服务的部署。</li>\n<li>由于 Gitee 改版，使用 Gitee Pages 前需要先完成实名认证。</li>\n</ol>\n<h2> 入参</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>是否必传</th>\n<th>默认值</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>gitee-username</code></td>\n<td>Gitee 用户名</td>\n<td>是</td>\n<td>-</td>\n<td><code>yanglbme</code></td>\n</tr>\n<tr>\n<td><code>gitee-password</code></td>\n<td>Gitee 密码</td>\n<td>是</td>\n<td>-</td>\n<td><code>${{ secrets.GITEE_PASSWORD }}</code></td>\n</tr>\n<tr>\n<td><code>gitee-repo</code></td>\n<td>Gitee 仓库（严格区分大小写）</td>\n<td>是</td>\n<td>-</td>\n<td><code>doocs/leetcode</code></td>\n</tr>\n<tr>\n<td><code>branch</code></td>\n<td>要部署的分支（分支必须存在）</td>\n<td>否</td>\n<td><code>master</code></td>\n<td><code>main</code></td>\n</tr>\n<tr>\n<td><code>directory</code></td>\n<td>要部署的分支上的目录</td>\n<td>否</td>\n<td></td>\n<td><code>src</code></td>\n</tr>\n<tr>\n<td><code>https</code></td>\n<td>是否强制使用 HTTPS</td>\n<td>否</td>\n<td><code>true</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<h2> 完整示例</h2>\n<h3> 1. 创建 workflow</h3>\n<p>在你的 GitHub 项目 <code>.github/workflows/</code> 文件夹下创建一个 <code>.yml</code> 文件，如 <code>sync.yml</code>，内容如下：</p>\n<div class=\"language-yaml line-numbers-mode\" data-ext=\"yml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注：</p>\n<ol>\n<li>这里我先使用 <a href=\"https://github.com/wearerequired/git-mirror-action\" target=\"_blank\" rel=\"noopener noreferrer\">wearerequired/git-mirror-action</a> 将 GitHub 仓库同步到 Gitee 仓库，再使用 <a href=\"https://github.com/yanglbme/gitee-pages-action\" target=\"_blank\" rel=\"noopener noreferrer\">yanglbme/gitee-pages-action</a> 实现 Gitee Pages 的自动部署。如果你已经通过其它的方式，将代码 push 至 Gitee 了，那么可以不使用 <a href=\"https://github.com/wearerequired/git-mirror-action\" target=\"_blank\" rel=\"noopener noreferrer\">wearerequired/git-mirror-action</a>，也不需要配置 <code>GITEE_RSA_PRIVATE_KEY</code>。</li>\n<li><code>branch</code> 参数默认是 <code>master</code>，如果你是部署在 <code>gh-pages</code>(或者 <code>main</code>) 分支等等，务必指定 <code>branch: gh-pages</code>(或者 <code>branch: main</code>)。</li>\n<li><code>branch</code> 对应的分支，必须在仓库中实际存在，请不要随意（不）指定分支，否则可能导致 Gitee Pages 站点出现 404 无法访问的情况。</li>\n<li>对于 <code>gitee-repo</code> 参数，如果你的项目在 Gitee 的地址为 <a href=\"https://gitee.com/%E7%94%A8%E6%88%B7%E5%90%8D/xxx\" target=\"_blank\" rel=\"noopener noreferrer\">https://gitee.com/用户名/xxx</a> ，那么 <code>gitee-repo</code> 就填写为 <code>用户名/xxx</code>。<a href=\"https://github.com/yanglbme/gitee-pages-action/issues/54\" target=\"_blank\" rel=\"noopener noreferrer\">#54</a></li>\n<li>对于 workflow 的触发事件，你可以根据项目实际情况，指定为其它的触发事件。比如：<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>更多触发事件，请参考 <a href=\"https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows\" target=\"_blank\" rel=\"noopener noreferrer\">Events that trigger workflows</a></li>\n</ol>\n<h3> 2. 配置密钥</h3>\n<p>密钥的配置步骤如下（可展开看示例图）：</p>\n<details>\n<summary>a. 在命令行终端或 Git Bash 使用命令 <code>ssh-keygen -t rsa -C \"youremail@example.com\"</code> 生成 SSH Key，注意替换为自己的邮箱。生成的 <code>id_rsa</code> 是私钥，<code>id_rsa.pub</code> 是公钥。(⚠️注意此处不要设置密码，生成的公私钥用于下面 GitHub / Gitee 的配置，以保证公私钥成对，否则从 GitHub -&gt; Gitee 的同步将会失败。)</summary>\n\n</details>\n<details>\n<summary>b. 在 GitHub 项目的「Settings -&gt; Secrets」路径下配置好命名为 <code>GITEE_RSA_PRIVATE_KEY</code> 和 <code>GITEE_PASSWORD</code> 的两个密钥。其中：<code>GITEE_RSA_PRIVATE_KEY</code> 存放 <code>id_rsa</code> 私钥；<code>GITEE_PASSWORD</code> 存放 Gitee 帐号的密码。</summary>\n\n</details>\n<details>\n<summary>c. 在 GitHub 的个人设置页面「<a href=\"https://github.com/settings/keys\">Settings -&gt; SSH and GPG keys</a>」配置 SSH 公钥（即：<code>id_rsa.pub</code>），命名随意。</summary>\n\n</details>\n<details>\n<summary>d. 在 Gitee 的个人设置页面「<a href=\"https://gitee.com/profile/sshkeys\">安全设置 -&gt; SSH 公钥</a>」配置 SSH 公钥（即：<code>id_rsa.pub</code>），命名随意。</summary>\n\n</details>\n<h3> 3. 关注 Gitee 公众号</h3>\n<p>关注 Gitee 官方公众号，并绑定个人 Gitee 帐号，用于接收帐号登录通知、以及绕过短信验证码校验，见<a href=\"#%E9%94%99%E8%AF%AF%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\">错误及解决方案</a> 第 3 点。</p>\n<h3> 4. 运行结果</h3>\n<p>如果一切配置正常，并成功触发 <a href=\"https://github.com/marketplace/actions/gitee-pages-action\" target=\"_blank\" rel=\"noopener noreferrer\">Gitee Pages Action</a> ，Gitee Pages Action 会打印出成功的结果。并且，我们会在 Gitee 公众号收到一条登录通知。这是 Gitee Pages Action 程序帮我们登录到 Gitee 官网，并为我们点击了项目的部署按钮。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>\n\n<h2> 错误及解决方案</h2>\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>错误</th>\n<th>解决方案</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Error: Wrong username or password, login failed .</td>\n<td>帐号或密码错误，请检查参数 <code>gitee-username</code>、<code>gitee-password</code>是否准确配置。</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Error: Need captcha validation, please visit <a href=\"https://gitee.com/login\" target=\"_blank\" rel=\"noopener noreferrer\">https://gitee.com/login</a>, login to validate your account.</td>\n<td>需要图片验证码校验。可以手动登录 Gitee 官方，校验验证码。</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Error: Need phone captcha validation, please follow wechat official account \"Gitee\" to bind account to turn off authentication.</td>\n<td>需要短信验证码校验。可以关注 Gitee 微信公众号，并绑定 Gitee 帐号，接收登录提示。<a href=\"https://github.com/yanglbme/gitee-pages-action/issues/6\" target=\"_blank\" rel=\"noopener noreferrer\">#6</a></td>\n</tr>\n<tr>\n<td>4</td>\n<td>Error: Do not deploy frequently, try again one minute later.</td>\n<td>短期内频繁部署 Gitee Pages 导致，可以稍后再触发自动部署。</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Error: Deploy error occurred, please check your input <code>gitee-repo</code>.</td>\n<td><code>gitee-repo</code> 参数格式如：<code>doocs/leetcode</code>，并且严格区分大小写，请准确填写。<a href=\"https://github.com/yanglbme/gitee-pages-action/issues/10\" target=\"_blank\" rel=\"noopener noreferrer\">#10</a></td>\n</tr>\n<tr>\n<td>6</td>\n<td>Error: Unknown error occurred in login method, resp: ...</td>\n<td>登录出现未知错误，请在 <a href=\"https://github.com/yanglbme/gitee-pages-action/issues\" target=\"_blank\" rel=\"noopener noreferrer\">issues</a> 区反馈。</td>\n</tr>\n<tr>\n<td>7</td>\n<td>Error: Rebuild page error, status code: xxx</td>\n<td>更新 Pages 时状态码异常，请尝试再次触发 Action 执行。也可能为 gitee pages 未初始化，第一次需要手动部署 gitee pages。</td>\n</tr>\n<tr>\n<td>8</td>\n<td>Error: HTTPSConnectionPool(host='<a href=\"http://gitee.com\" target=\"_blank\" rel=\"noopener noreferrer\">gitee.com</a>', port=443): Read timed out. (read timeout=6)<br><br>Error: HTTPSConnectionPool(host='<a href=\"http://gitee.com\" target=\"_blank\" rel=\"noopener noreferrer\">gitee.com</a>', port=443): Max retries exceeded with url: /login (Caused by ConnectTimeoutError(&lt;urllib3.connection.HTTPSConnection object at 0x7f6c889d42e8&gt;, 'Connection to <a href=\"http://gitee.com\" target=\"_blank\" rel=\"noopener noreferrer\">gitee.com</a> timed out. (connect timeout=6)'))</td>\n<td>网络请求出错，请尝试 Re-run jobs 。<a href=\"https://github.com/yanglbme/gitee-pages-action/issues/27\" target=\"_blank\" rel=\"noopener noreferrer\">#27</a></td>\n</tr>\n<tr>\n<td>9</td>\n<td><a href=\"mailto:git@github.com\">git@github.com</a>: Permission denied (publickey).<br>fatal: Could not read from remote repository.<br>Please make sure you have the correct access rights and the repository exists..</td>\n<td>先尝试 Re-run job。<a href=\"https://github.com/yanglbme/gitee-pages-action/issues/56\" target=\"_blank\" rel=\"noopener noreferrer\">#56</a> <br>若仍旧失败，可能是 SSH 公私钥配置有问题，或是使用了带密码的私钥，请参照上文提及的密钥配置步骤进行相应配置。<a href=\"https://github.com/yanglbme/gitee-pages-action/issues/29\" target=\"_blank\" rel=\"noopener noreferrer\">#29</a></td>\n</tr>\n<tr>\n<td>10</td>\n<td>Hexo Gitee Pages 自动部署站点问题。</td>\n<td><a href=\"https://github.com/No5972\" target=\"_blank\" rel=\"noopener noreferrer\">@No5972</a> 详细给出了一种解决方案。<a href=\"https://github.com/yanglbme/gitee-pages-action/issues/34\" target=\"_blank\" rel=\"noopener noreferrer\">#34</a></td>\n</tr>\n<tr>\n<td>11</td>\n<td>\"/root/.ssh/id_rsa\": invalid format.</td>\n<td>操作系统环境不同，生成 ssh key 的方式可能有所差别，尝试添加 <code>-m PEM</code> 参数试试。<a href=\"https://github.com/yanglbme/gitee-pages-action/issues/49\" target=\"_blank\" rel=\"noopener noreferrer\">#49</a></td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n</tr>\n</tbody>\n</table>\n<!-- \n## 联系我\n\n对于 Gitee Pages Action 有任何的疑问，还可以通过以下方式找到我。\n\n<table>\n  <tr>\n    <td align=\"center\" style=\"width: 200px;\">\n      <a href=\"https://github.com/doocs\">\n        <img src=\"@source/notes/githubaction/images/qrcode-for-doocs.jpg\" style=\"width: 400px;\" alt=\"公众号\"><br>\n        <sub>公众平台</sub>\n      </a><br>\n    </td>\n    <td align=\"center\" style=\"width: 200px;\">\n      <a href=\"https://github.com/yanglbme\">\n        <img src=\"@source/notes/githubaction/images/qrcode-for-yanglbme.jpg\" style=\"width: 400px;\" alt=\"微信\"><br>\n        <sub>个人微信</sub>\n      </a><br>\n    </td>\n  </tr>\n</table> -->\n<h2> 许可证</h2>\n<p>MIT</p>\n",
      "date_published": "2023-04-04T22:10:00.000Z",
      "date_modified": "2023-04-17T06:04:06.714Z",
      "authors": [],
      "tags": [
        "运维"
      ]
    },
    {
      "title": "github代码备份到gitee仓库-工作流",
      "url": "https://blog.lxip.top/notes/githubaction/github%E4%BB%A3%E7%A0%81%E5%A4%87%E4%BB%BD%E5%88%B0gitee%E4%BB%93%E5%BA%93-%E5%B7%A5%E4%BD%9C%E6%B5%81.html",
      "id": "https://blog.lxip.top/notes/githubaction/github%E4%BB%A3%E7%A0%81%E5%A4%87%E4%BB%BD%E5%88%B0gitee%E4%BB%93%E5%BA%93-%E5%B7%A5%E4%BD%9C%E6%B5%81.html",
      "summary": "大概思路 从本地（windows）使用git将代码提交到GitHub某仓库，然后触发某仓库GitHub工作流，使其将代码推送到gitee仓库。 前置知识 需要会使用git; 熟悉GitHub（配置、工作流）; 大致步骤 关于GitHub工作流与密钥配置对应图： image-20230404224357484 1.配置本地密钥到gitee，至于怎么配置可...",
      "content_html": "<h2> 大概思路</h2>\n<p>从本地（windows）使用git将代码提交到GitHub某仓库，然后触发某仓库GitHub工作流，使其将代码推送到gitee仓库。</p>\n<h2> 前置知识</h2>\n<ul>\n<li>\n<p>需要会使用git</p>\n</li>\n<li>\n<p>熟悉GitHub（配置、工作流）</p>\n</li>\n</ul>\n<h2> 大致步骤</h2>\n<p>关于GitHub工作流与密钥配置对应图：</p>\n<figure><figcaption>image-20230404224357484</figcaption></figure>\n<p>1.配置本地密钥到gitee，至于怎么配置可以参考<a href=\"../gitMore\">git多账号配置</a></p>\n<p>2.配置GitHub公钥</p>\n<p>该公钥要与gitee配置公钥对应上</p>\n<p>本地密钥id_rsa_gitee.pub内容复制到GitHub中</p>\n<figure><figcaption>image-20230404221056949</figcaption></figure>\n<p>粘贴到如下图：</p>\n<figure><figcaption>image-20230404221134689</figcaption></figure>\n<p>同理将上的公钥复制粘贴到gitee上</p>\n<p>配置示例如下：</p>\n<figure><figcaption>image-20230404222501712</figcaption></figure>\n<p>3.配置GitHub仓库密钥</p>\n<p>需要在GitHub仓库添加对应secrets</p>\n<p>如下图：</p>\n<figure><figcaption>image-20230404225010003</figcaption></figure>\n<blockquote>\n<p>注意：此处的私钥要与gitee配置的公钥成对存在</p>\n</blockquote>\n<p>如下图：</p>\n<figure><figcaption>image-20230404225213255</figcaption></figure>\n<h2> 附件</h2>\n<p>参考：<a href=\"https://github.com/yanglbme/gitee-pages-action\" target=\"_blank\" rel=\"noopener noreferrer\">yanglbme/gitee-pages-action</a></p>\n<p><a href=\"./gitee-pages-action\">gitee-pages-action</a></p>\n<h3> 报错</h3>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>原因：gitee配置的此公钥要与GitHub公钥成对存在。</p>\n<p>添加即可解决</p>\n<figure><figcaption>image-20230404223214170</figcaption></figure>\n<p>如未解决可参考：<a href=\"https://github.com/yanglbme/gitee-pages-action/issues/29\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/yanglbme/gitee-pages-action/issues/29</a></p>\n",
      "date_published": "2023-04-04T22:10:00.000Z",
      "date_modified": "2023-04-17T06:04:06.720Z",
      "authors": [],
      "tags": [
        "运维"
      ]
    },
    {
      "title": "mysql问题",
      "url": "https://blog.lxip.top/notes/database/question.html",
      "id": "https://blog.lxip.top/notes/database/question.html",
      "summary": "问题1-提示1251- Client does not support authentication protocol requested by server 原因：mysql8 之前的版本中加密规则是mysqlnativepassword,而在mysql8之后,加密规则是cachingsha2password, 解决办法： 使用命令方式解决： 附件 ...",
      "content_html": "<h2> 问题1-提示1251- Client does not support authentication protocol requested by server</h2>\n<p>原因：mysql8 之前的版本中加密规则是mysql_native_password,而在mysql8之后,加密规则是caching_sha2_password,</p>\n<p>解决办法：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>使用命令方式解决：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 附件</h2>\n<p>参考：<a href=\"https://blog.csdn.net/pengfeng111833/article/details/124399404\" target=\"_blank\" rel=\"noopener noreferrer\">https://blog.csdn.net/pengfeng111833/article/details/124399404</a></p>\n<p>参考2：<a href=\"https://huaweicloud.csdn.net/63355d9ed3efff3090b54464.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://huaweicloud.csdn.net/63355d9ed3efff3090b54464.html</a></p>\n",
      "date_published": "2022-11-17T00:00:00.000Z",
      "date_modified": "2023-04-17T06:04:06.723Z",
      "authors": [
        {
          "name": "nxg"
        }
      ],
      "tags": [
        "mysql"
      ]
    },
    {
      "title": "centos7.9使用",
      "url": "https://blog.lxip.top/notes/linux/linux.html",
      "id": "https://blog.lxip.top/notes/linux/linux.html",
      "summary": "more 注释之前的内容被视为文章摘要。",
      "content_html": "<p><code>more</code> 注释之前的内容被视为文章摘要。</p>\n<!-- more -->\n<h2> 一、环境安装</h2>\n<h3> 1.JDK安装</h3>\n<p>这里安装JDK版本jdk-8u11-linux-x64.tar.gz</p>\n<p>注：在登录centos服务器之后切换到根（root）目录下</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>1.在root权限下，在根目录下创建文件夹</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>切换到/usr/local/java目录下</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>将该jdk-8u11-linux-x64.tar.gz压缩包上传到当前位置</p>\n<p>2.解压jdk-8u11-linux-x64.tar.gz压缩包</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>然后切换到根目录下</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>3.编辑Linux系统中环境变量所在文件</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>4.在文件最后加入环境变量设置，加入后保存文件</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>5.让环境变量生效</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>6.测试JDK是否已经配置好</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 2 .Docker安装</h2>\n<p>在拉去之前，先配置镜像加速器</p>\n<p>阿里云镜像获取地址：<a href=\"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors%EF%BC%8C%E7%99%BB%E9%99%86%E5%90%8E%EF%BC%8C%E5%B7%A6%E4%BE%A7%E8%8F%9C%E5%8D%95%E9%80%89%E4%B8%AD%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F%E5%99%A8%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E4%BD%A0%E7%9A%84%E4%B8%93%E5%B1%9E%E5%9C%B0%E5%9D%80%E4%BA%86%EF%BC%9A\" target=\"_blank\" rel=\"noopener noreferrer\">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors，登陆后，左侧菜单选中镜像加速器就可以看到你的专属地址了：</a></p>\n<figure><figcaption>image-20221116231427095</figcaption></figure>\n<p>因为工作的需要,需要把docker 启动后的路径改成/data,所以就会用到:<em>/etc/docker/daemon.json</em> 是docker 的配置<em>文件</em>,默认是没有的,需要我们手动创建,可配置项<em>如下:</em></p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后打开下面的配置文件：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>在/etc/docker/daemon.json文件末尾增加如下内容：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>修改完daemon.json文件后，需要让这个文件生效</p>\n<p>a.修改完成后reload配置文件</p>\n<p>sudo systemctl daemon-reload</p>\n<p>b.重启docker服务</p>\n<p>sudo systemctl restart docker.service</p>\n<p>c.查看状态</p>\n<p>sudo systemctl status docker -l</p>\n<p>d.查看服务</p>\n<p>sudo docker info</p>\n</blockquote>\n<p><em><strong>为什么配置这个呢？原因是docker下载镜像速度慢，需要配置国内镜像加速。</strong></em></p>\n<p>Docker可以运行在MAC、Windows、CentOS、UBUNTU等操作系统上，本课程基于CentOS7安装Docker</p>\n<p>官网：<a href=\"https://www.docker.com\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.docker.com</a></p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> 2.1docker命令</h4>\n<p>1.进程相关命令</p>\n<p>启动docker服务:</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>停止docker服务:</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>重启docker服务:</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>查看docker服务状态:</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>设置开机启动docker服务:</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>2.镜像相关命令</p>\n<p>镜像命令包括如下内容：查看镜像、搜索镜像、拉取镜像、删除镜像</p>\n<p>查看镜像:查看本地所有的镜像</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>搜索镜像:从网络中查找需要的镜像</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>拉取镜像:从Docker仓库下载镜像到本地，镜像名称格式为名称:版本号，如果版本号不指定则是最新的版本lastest。</p>\n<p>如果不知道镜像版本，可以去dockerhub搜索对应镜像查看。</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>删除镜像:删除本地镜像</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>3.容器相关命令</p>\n<p>查看容器、创建容器、进入容器、启动容器、停止容器、删除容器、查看容器信息</p>\n<p>查看容器</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>创建并启动容器</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>参数说明：</p>\n<p>-i：保持容器运行。通常与-t同时使用。加入it这两个参数后，容器创建后自动进入容器中，退出容器后，容器自动关闭。</p>\n<p>-t：为容器重新分配一个伪输入终端，通常与-i同时使用。</p>\n<p>-d：以守护（后台）模式运行容器。创建一个容器在后台运行，需要使用dockerexec进入容器。退出后，容器不会关闭。</p>\n<p>-it创建的容器一般称为交互式容器，-id创建的容器一般称为守护式容器</p>\n<p>--name：为创建的容器命名。</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注意：交互式容器，exit后容器自动关闭，守护式容器会在后台执行</p>\n<p>进入容器</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>停止容器</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>启动容器</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>删除容器：如果容器是运行状态则删除失败，需要停止容器才能删除</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>查看容器信息</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>4.Docker容器的数据卷</p>\n<p>....</p>\n<h2> 3.Docker应用部署</h2>\n<p>3.1MySQL部署</p>\n<p>分析</p>\n<p>容器内的网络服务和外部机器不能直接通信</p>\n<p>外部机器和宿主机可以直接通信宿主机和容器可以直接通信</p>\n<p>当容器中的网络服务需要被外部机器访问时，可以将容器中提供服务的端口映射到宿主机的端口上。外部机器访问宿主机的端口，从而间接访问容器的服务。</p>\n<p>这种操作称为：<strong>端口映射</strong></p>\n<figure><figcaption>image-20221117002336127</figcaption></figure>\n<p>1.搜索mysql镜像</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>2.拉取mysql镜像</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>3.创建容器，设置端口映射、目录映射</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>参数说明：</p>\n<p>-p  3307:3306：将容器的3306端口映射到宿主机的3307端口。</p>\n<p>-v  $PWD/conf:/etc/mysql/conf.d：将主机当前目录下的conf/my.cnf挂载到容器的 /etc/mysql/my.cnf 。配置目录</p>\n<p>-v  $PWD/logs:/logs：将主机当前目录下的logs目录挂载到容器的/logs。日志目录</p>\n<p>-v  $PWD/data:/var/lib/mysql：将主机当前目录下的data目录挂载到容器的/var/lib/mysql。数据目录</p>\n<p>-e  MYSQL_ROOT_PASSWORD=123456：初始化root用户的密码。</p>\n<p>4.进入容器，操作</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>3.2.Tomcat部署</p>\n<p>1.搜索tomcat镜像</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>2.拉取tomcat镜像</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>3.创建容器，设置端口映射、目录映射</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行下面的命令：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>参数说明：</p>\n<p>-p 8080:8080：将容器的8080端口映射到主机的8080端口</p>\n<p>-v $PWD:/usr/local/tomcat/webapps：将主机中当前目录挂载到容器的webapps</p>\n<p>4.使用外部机器访问tomcat</p>\n<p>3.3.Nginx部署</p>\n<p>1.搜索nginx镜像</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>2.拉取nginx镜像</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>3.创建容器，设置端口映射、目录映射</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行下面的命令：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行下面的命令启动nginx容器：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>3.4.Redis部署</p>\n<p>1.搜索redis镜像</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>2.拉取redis镜像</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>3.创建容器，设置端口映射</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>4.使用外部机器连接redis</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 4.Dockerfile</h2>\n<p>4.1docker镜像原理：</p>\n<p>思考：</p>\n<p>Docker 镜像本质是什么？</p>\n<p>Docker 中一个centos镜像为什么只有200MB，而一个centos操作系统的iso文件要几个个G？</p>\n<p>Docker 中一个tomcat镜像为什么有600MB，而一个tomcat安装包只有70多MB？</p>\n<p>操作系统组成部分：</p>\n<p>进程调度子系统</p>\n<p>进程通信子系统</p>\n<p>内存管理子系统</p>\n<p>设备管理子系统</p>\n<p>文件管理子系统</p>\n<p>网络通信子系统</p>\n<p>作业控制子系统</p>\n<p>Linux文件系统由bootfs和rootfs两部分组成</p>\n<p>bootfs：包含bootloader（引导加载程序）和 kernel（内核） rootfs： root文件系统，包含的就是典型 Linux 系统中的/dev，/proc，/bin，/etc等标准目录和文件</p>\n<p>不同的linux发行版，bootfs基本一样，而rootfs不同，如ubuntu，centos等</p>\n<figure><figcaption>image-20221117193843478</figcaption></figure>\n<p>docker镜像原理</p>\n<p>Docker镜像是由特殊的文件系统叠加而成</p>\n<p>最底端是 bootfs，并使用宿主机的bootfs</p>\n<p>第二层是 root文件系统rootfs,称为base image 然后再往上可以叠加其他的镜像文件</p>\n<p>统一文件系统（Union File System）技术能够将不同的层整合成一个文件系统，为这些层提供了一个统一的 视角，这样就隐藏了多层的存在，在用户的角度看来，只存在一个文件系统。</p>\n<p>一个镜像可以放在另一个镜像的上面。位于下面的镜像称为父镜像，最底部的镜像成为基础镜像。</p>\n<p>当从一个镜像启动容器时，Docker会在最顶层加载一个读写文件系统作为容器</p>\n<figure><figcaption>image-20221117193946995</figcaption></figure>\n<p>回答问题</p>\n<p>1.Docker 镜像本质是什么？ 是一个分层文件系统</p>\n<p>2.Docker 中一个centos镜像为什么只有200MB，而一个centos操作系统的iso文件要几个个G？</p>\n<p>Centos的iso镜像文件包含bootfs和rootfs，而docker的centos镜像复用操作系统的bootfs，只有rootfs和其 他镜像层</p>\n<p>3.Docker 中一个tomcat镜像为什么有600MB，而一个tomcat安装包只有70多MB？ 由于docker中镜像是分层的，tomcat虽然只有70多MB，但他需要依赖于父镜像和基础镜像，所有整个对外 暴露的tomcat镜像大小600多MB</p>\n<p>4.2镜像制作</p>\n<p>容器转换镜像</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><figure><figcaption>image-20221117194250515</figcaption></figure>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>执行操作：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>dockerfile</p>\n<p>概念</p>\n<p>Dockerfile 是一个文本文件</p>\n<p>包含了一条条的指令</p>\n<p>每一条指令构建一层，基于基础镜像，最终构建出一个新的镜像</p>\n<p>对于开发人员：可以为开发团队提供一个完全一致的开发环境</p>\n<p>对于测试人员：可以直接拿开发时所构建的镜像或者通过Dockerfile文件构建一个新的镜像开始工作了</p>\n<p>对于运维人员：在部署时，可以实现应用的无缝移植</p>\n<p>参考Dochub网址：<a href=\"https://hub.docker.com\" target=\"_blank\" rel=\"noopener noreferrer\">https://hub.docker.com</a> ，比如centos和nginx镜像</p>\n<table>\n<thead>\n<tr>\n<th>关键字</th>\n<th>作用</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>FROM</td>\n<td>指定父镜像</td>\n<td>指定dockerfile基于那个image构建</td>\n</tr>\n<tr>\n<td>MAINTAINER</td>\n<td>作者信息 用</td>\n<td>用来标明这个dockerfile谁写的</td>\n</tr>\n<tr>\n<td>LABEL</td>\n<td>标签</td>\n<td>用来标明dockerfile的标签 可以使用Label代替Maintainer 最终都是在 docker image基本信息中可以查看</td>\n</tr>\n<tr>\n<td>RUN</td>\n<td>容器启动命 令</td>\n<td>执行一段命令 默认是/bin/sh 格式: RUN command 或者 RUN [\"command\" , \"param1\",\"param2\"]</td>\n</tr>\n<tr>\n<td>CMD</td>\n<td>容器启动命 令</td>\n<td>提供启动容器时候的默认命令 和ENTRYPOINT配合使用.格式 CMD command param1 param2 或者 CMD [\"command\" , \"param1\",\"param2\"]</td>\n</tr>\n<tr>\n<td>ENTRYPOINT</td>\n<td>入口</td>\n<td>一般在制作一些执行就关闭的容器中会使用</td>\n</tr>\n<tr>\n<td>COPY</td>\n<td>复制文件</td>\n<td>build的时候复制文件到image中</td>\n</tr>\n<tr>\n<td>ADD</td>\n<td>添加文件</td>\n<td>build的时候添加文件到image中 不仅仅局限于当前build上下文 可以来 源于远程服务</td>\n</tr>\n<tr>\n<td>ENV</td>\n<td>环境变量</td>\n<td>指定build时候的环境变量 可以在启动的容器的时候 通过-e覆盖 格式 ENV name=value</td>\n</tr>\n<tr>\n<td>ARG</td>\n<td>构建参数</td>\n<td>构建参数 只在构建的时候使用的参数 如果有ENV 那么ENV的相同名字 的值始终覆盖arg的参数</td>\n</tr>\n<tr>\n<td>VOLUME</td>\n<td>定义外部可 以挂载的数 据卷</td>\n<td>指定build的image那些目录可以启动的时候挂载到文件系统中 启动容 器的时候使用 -v 绑定 格式 VOLUME [\"目录\"]</td>\n</tr>\n<tr>\n<td>EXPOSE</td>\n<td>暴露端口</td>\n<td>定义容器运行的时候监听的端口 启动容器的使用-p来绑定暴露端口 格 式: EXPOSE 8080 或者 EXPOSE 8080/udp</td>\n</tr>\n<tr>\n<td>WORKDIR</td>\n<td>工作目录</td>\n<td>指定容器内部的工作目录 如果没有创建则自动创建 如果指定/ 使用的是 绝对地址 如果不是/开头那么是在上一条workdir的路径的相对路径</td>\n</tr>\n<tr>\n<td>USER</td>\n<td>指定执行用 户</td>\n<td>指定build或者启动的时候 用户 在RUN CMD ENTRYPONT执行的时候 的用户</td>\n</tr>\n<tr>\n<td>HEALTHCHECK</td>\n<td>健康检查</td>\n<td>指定监测当前容器的健康监测的命令 基本上没用 因为很多时候 应用本 身有健康监测机制</td>\n</tr>\n<tr>\n<td>ONBUILD</td>\n<td>触发器</td>\n<td>当存在ONBUILD关键字的镜像作为基础镜像的时候 当执行FROM完成 之后 会执行 ONBUILD的命令 但是不影响当前镜像 用处也不怎么大</td>\n</tr>\n<tr>\n<td>STOPSIGNAL</td>\n<td>发送信号量 到宿主机</td>\n<td>该STOPSIGNAL指令设置将发送到容器的系统调用信号以退出。</td>\n</tr>\n<tr>\n<td>SHELL</td>\n<td>指定执行脚 本的shell</td>\n<td>指定RUN CMD ENTRYPOINT 执行命令的时候 使用的shell</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>案例一：</p>\n<p>自定义centos7镜像。</p>\n<p>要求：</p>\n<ol>\n<li>默认登录路径为 /usr</li>\n<li>可以使用vim</li>\n</ol>\n<p>实现步骤</p>\n<p>定义父镜像：FROM centos:7</p>\n<p>定义作者信息：MAINTAINER lxs <a href=\"mailto:lxs@lxs.cn\">lxs@lxs.cn</a></p>\n<p>执行安装vim命令： RUN yum install -y vim</p>\n<p>定义默认的工作目录：WORKDIR /usr</p>\n<p>定义容器启动执行的命令：CMD /bin/bash</p>\n<p>通过dockerfile构建镜像：docker bulid –f dockerfile文件路径 –t 镜像名称:版本 .</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>dockerfile具体内容</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>build</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>-f：镜像文件</p>\n<p>-t：新镜像名</p>\n<p>. 寻址路径</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>案例二：发布springboot项目</p>\n<p>定义父镜像：FROM java:8</p>\n<p>定义作者信息：MAINTAINER lxs <a href=\"mailto:lxs@163.com\">lxs@163.com</a></p>\n<p>将jar包添加到容器： ADD springboot.jar app.jar</p>\n<p>定义容器启动执行的命令：CMD [\"java\",\"-jar\",\"app.jar\"]</p>\n<p>通过dockerfile构建镜像：docker bulid –f dockerfile文件路径 –t 镜像名称:版本 .</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>build</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>启动容器</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h2> 5.服务编排</h2>\n<p>5.1. 概念</p>\n<p>微服务架构的应用系统中一般包含若干个微服务，每个微服务一般都会部署多个实例，如果每个微服务都要手动启 动停止，维护的工作量会很大。来看下我们日常工作：</p>\n<p>要从Dockerfile build image 或者去dockerhub拉取image</p>\n<p>要创建多个container</p>\n<p>要管理这些container（启动停止删除）</p>\n<p>通过服务编排可以大量简化上面的工作服务编排：按照一定的业务规则批量管理容器</p>\n<p>5.2 Docker Compose</p>\n<p>Docker Compose是一个编排多容器分布式部署的工具，提供命令集中管理容器化应用的完整开发周期，包括服务 构建，启动和停止。使用步骤：</p>\n<ol>\n<li>利用 Dockerfile 定义运行环境镜像</li>\n<li>使用 docker-compose.yml 定义组成应用的各服务</li>\n<li>运行 docker-compose up 启动应用</li>\n</ol>\n<figure><figcaption>image-20221117200311623</figcaption></figure>\n<p>安装Docker Compose</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>卸载Docker Compose</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>编排nginx+springboot</p>\n<p>需求：使用nginx反向代理到springboo应用</p>\n<ol>\n<li>创建docker-compose目录</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>2.编写 docker-compose.yml 文件</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>3.创建./nginx/conf.d目录</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>4.在./nginx/conf.d目录下 编写app.conf文件</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>5.在~/docker-compose 目录下 使用docker-compose 启动容器</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><ol start=\"6\">\n<li>测试访问</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h2> 6.Docker私有仓库</h2>\n<blockquote>\n<p>Docker官方的Docker hub（<a href=\"https://hub.docker.com\" target=\"_blank\" rel=\"noopener noreferrer\">https://hub.docker.com</a>）是一个用于管理公共镜像的仓库，我们可以从上面拉 取镜像 到本地，也可以把我们自己的镜像推送上去。但是，有时候我们不希望将自己的镜 像放到公网当中， 那么这时我们就需要搭建自己的私有仓库来存储和管理自己的镜像</p>\n</blockquote>\n<p>6.1. 私有仓库搭建</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>6.2将镜像上传至私有仓库</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>从私有仓库拉取镜像</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2> 附件</h2>\n<p>参考：<a href=\"https://www.cnblogs.com/yakniu/p/16329611.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.cnblogs.com/yakniu/p/16329611.html</a></p>\n<p>参考：服务端口占用情况：<a href=\"https://www.leixue.com/qa/how-does-centos-check-port-occupancy\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.leixue.com/qa/how-does-centos-check-port-occupancy</a></p>\n<p>参考mysql数据库问题：</p>\n<p>【MySql】Navicat 连接数据库出现1251 - Client does not support authentication protocol ...... 问题的解决方法：</p>\n<p><a href=\"https://blog.csdn.net/pengfeng111833/article/details/124399404\" target=\"_blank\" rel=\"noopener noreferrer\">https://blog.csdn.net/pengfeng111833/article/details/124399404</a></p>\n<p><a href=\"https://blog.csdn.net/piupiu78/article/details/122468163\" target=\"_blank\" rel=\"noopener noreferrer\">https://blog.csdn.net/piupiu78/article/details/122468163</a></p>\n",
      "date_published": "2022-11-16T00:00:00.000Z",
      "date_modified": "2023-04-17T06:04:06.752Z",
      "authors": [
        {
          "name": "nxg"
        }
      ],
      "tags": [
        "linux"
      ]
    },
    {
      "title": "Git多账号配置",
      "url": "https://blog.lxip.top/notes/git/gitMore.html",
      "id": "https://blog.lxip.top/notes/git/gitMore.html",
      "summary": "一、背景 ​\t\t在同一台电脑上有时候需要使用多个GitHub、gitee、gitlab账号，或者说你有多个账号，不想来回生成公钥，那么这就需要使用到git配置多账户了。 二、准备 环境：window 10、git 在使用之前你需要安装git，对于git安装也是点击下一步下一步就可以安装完成，在此也需要对git命令有一定的了解。 前提条件：需要C:\\Us...",
      "content_html": "<h2> 一、背景</h2>\n<p>​\t\t在同一台电脑上有时候需要使用多个GitHub、gitee、gitlab账号，或者说你有多个账号，不想来回生成公钥，那么这就需要使用到git配置多账户了。</p>\n<h2> 二、准备</h2>\n<p>环境：window 10、git</p>\n<p>在使用之前你需要安装git，对于git安装也是点击下一步下一步就可以安装完成，在此也需要对git命令有一定的了解。</p>\n<p>前提条件：需要C:\\Users\\nxg.ssh目录（文件夹）下，打开git bash</p>\n<p>如下图所示：</p>\n<figure><figcaption>image-20221031222311849</figcaption></figure>\n<p>打开之后使用这个界面：</p>\n<figure><figcaption>image-20221031222421017</figcaption></figure>\n<p>**注意：**这路径C:\\Users\\nxg.ssh对于有一定基础的根据上图是能看明白，就不再赘述了。</p>\n<p>​\t\t为什么先执行这一步呢？原因是这样的在你创建config文件，生成密钥时都需要创建在这个**.ssh**目录（文件夹）下。如果你在其他目录下打开，那你就需要考虑创建文件时的路径问题了。为了方便明了，就使用上述方法操作，省时省力。</p>\n<h2> 三、配置</h2>\n<h3> 3.1 创建config文件</h3>\n<p>在C:\\Users\\nxg.ssh目录（文件夹）下创建config文件，并且配置ssh key的路由策略。</p>\n<p>创建config文件：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>在config文件中配置</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>效果如图所示：</p>\n<figure><figcaption>image-20221031224144979</figcaption></figure>\n<blockquote>\n<p>“#”  表示注释\nHost  后面是名称，可以随便写，相当于起了一个别名</p>\n<p>每一个Host就代表一个仓库，仓库参数另起一行，前有4个空格\nHostName ： 真正连接的服务器地址</p>\n<p>ssh的host，SSH地址“git@”后面到冒号前面的内容</p>\n<p><code>User</code>：自定义的用户名，一般使用“git”\n<code>PreferredAuthentications</code>： 指定优先使用哪种方式验证，支持密码和秘钥验证方式 。使用“publickey”即可，git仓库均为这种形式</p>\n<p>权限认证--可设为publickey,password publickey,keyboard-interactive等\n<code>IdentityFile</code>：指定本次连接使用的密钥文件。 该host后台配置的公钥对应的私钥地址的绝对路径\nPort ： SSH默认端口号为22，某些私有部署的git仓库会更换端口号</p>\n</blockquote>\n<h3> 3.2 全局配置</h3>\n<p>以github为例：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注：这里的abc是GitHub<strong>用户名</strong> ，<strong><a href=\"mailto:123456@qq.com\">123456@qq.com</a></strong>这里是你绑定GitHub上的邮箱</p>\n<p>如下图效果：</p>\n<figure><figcaption>image-20221031232651471</figcaption></figure>\n<p>配置gitee效果如下图所示：</p>\n<figure><figcaption>image-20221031232222217</figcaption></figure>\n<p>注意：生成密钥文件需要与这里保持一致</p>\n<figure><figcaption>image-20221031233525370</figcaption></figure>\n<h3> 测试是否连接成功</h3>\n<p>测试GitHub是否连接成功：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>成功效果：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>测试Gitee是否连接成功：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>成功效果：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>注意事项：</p>\n<figure><figcaption>image-20221031234333269</figcaption></figure>\n<h2> 四、关联github</h2>\n<p>将id_rsa_gitee.pub文件中的内容添加到gitee设置中的SSH公钥中。</p>\n<p>将id_rsa_github2.pub文件中的内容添加到github的settings的SSH and GPG keys的SSH公钥中。</p>\n<p>注：上面的文件都在</p>\n<figure><figcaption>image-20221101162514113</figcaption></figure>\n<p>效果如下图所示：</p>\n<figure><figcaption>image-20221101162133360</figcaption></figure>\n<h2> 注意</h2>\n<p>在配置多个账号的，方式有多种，可以使用直接修改文件的方式，也可以使用命令的方式</p>\n<p>这里使用修改文件的方式</p>\n<p>首先需要在这C:\\Users\\nxg路径下，找到**.gitconfig**文件，并打开此文件</p>\n<figure><figcaption>image-20221031235250843</figcaption></figure>\n<p>注意：别直接双击打开，需要选择打开方式，选文本打开，或者其他编辑工具打开。</p>\n<p><strong>.gitconfig</strong>文件内容：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>效果如下图所示：</p>\n<figure><figcaption>image-20221031235759564</figcaption></figure>\n<h3> 查看账号列表：</h3>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>效果如图所示：</p>\n<figure><figcaption>image-20221101000219730</figcaption></figure>\n<h3> 添加密钥的方式</h3>\n<p>方式一：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>再执行 <strong>id_rsa</strong></p>\n<figure><figcaption>image-20221031232651471</figcaption></figure>\n<p>方式二：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>效果如图所示：</p>\n<figure><figcaption>image-20221101000544601</figcaption></figure>\n<blockquote>\n<p><strong>ssh-keygen常用参数说明:</strong></p>\n<p>-t: 密钥类型, 可以选择 dsa | ecdsa | ed25519 | rsa;</p>\n<p>-f: 密钥目录位置, 默认为当前用户home路径下的.ssh隐藏目录, 也就是~/.ssh/, 同时默认密钥文件名以id_rsa开头. 如果是root用户, 则在/root/.ssh/id_rsa, 若为其他用户, 则在/home/username/.ssh/id_rsa;</p>\n<p>-C: 指定此密钥的备注信息, 需要配置多个免密登录时, 建议携带;</p>\n<p>-N: 指定此密钥对的密码, 如果指定此参数, 则命令执行过程中就不会出现交互确认密码的信息了.</p>\n<p>举例说明: 同时指定目录位置、密码、注释信息, 就不需要输入回车键即可完成创建:</p>\n</blockquote>\n<h2> 附件</h2>\n<p><a href=\"https://blog.csdn.net/weixin_45586870/article/details/120446094\" target=\"_blank\" rel=\"noopener noreferrer\">git单一账号使用教程</a></p>\n",
      "date_published": "2022-10-31T00:00:00.000Z",
      "date_modified": "2023-04-17T06:04:06.759Z",
      "authors": [],
      "tags": [
        "运维"
      ]
    },
    {
      "title": "Git提交本地代码至分支（详细每一步）",
      "url": "https://blog.lxip.top/notes/git/git.html",
      "id": "https://blog.lxip.top/notes/git/git.html",
      "summary": "A: 查看本地分支 使用 git branch命令，如下：git branch *标识的是你当前所在的分支 img B: 查看远程分支 命令如下：git branch -r img C: 查看所有分支 命令如下：git branch -a img 二、本地创建新分支 命令如下：git branch [分支名称] 例如：git branch platef...",
      "content_html": "<h1> 查看分支</h1>\n<p>A: 查看本地分支\n使用 git branch命令，如下：git branch\n*标识的是你当前所在的分支</p>\n<figure><figcaption>img</figcaption></figure>\n<p>B: 查看远程分支</p>\n<p>命令如下：git branch -r</p>\n<figure><figcaption>img</figcaption></figure>\n<p>C: 查看所有分支</p>\n<p>命令如下：git branch -a</p>\n<figure><figcaption>img</figcaption></figure>\n<p>二、本地创建新分支</p>\n<p>命令如下：git branch [分支名称]</p>\n<p>例如：git branch plateformSuperdog</p>\n<p>三、切换到新分支</p>\n<p>命令如下：git checkout [分支名称]</p>\n<p>例如：git checkout plateformSuperdog</p>\n<p>四、创建+切换分支</p>\n<p>命令如下：git checkout -b [分支名称]</p>\n<p>例如：git checkout -b plateform2</p>\n<p>其中：git checkout -b [分支名称]相当于两步</p>\n<p>git branch [分支名称]</p>\n<p>git checkout [分支名称]</p>\n<p>五、将新分支推送到github</p>\n<p>命令如下：git push origin [分支名称]</p>\n<p>六：删除本地分支</p>\n<p>命令如下：git branch -d [分支名称]</p>\n<p>七、删除github 远方分支</p>\n<p>命令如下：git push origin :[branch name]</p>\n<p>其中：分支前面：代表删除</p>\n<p>例如：git push origin : plateform2</p>\n<p>八：git 提交本地代码至新分支</p>\n<p>1.切换到新分支</p>\n<p>命令如下：git checkout [分支名称]</p>\n<p>例如：git checkout plateform2</p>\n<p>2.添加本地需要提交的代码</p>\n<p>命令如下：git add .</p>\n<p>3.提交本地代码</p>\n<p>命令如下：git commit -m \"修改说明\"</p>\n<p>4.push到git仓库</p>\n<p>命令如下：git push origin [分支名称]</p>\n<p>例如：git push origin plateform2</p>\n<hr>\n<h1> 简单总结一下：</h1>\n<ol>\n<li>拉取仓库（克隆）：</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ol>\n<li>将要提交的代码复制到该仓库中（克隆的文件夹中）</li>\n</ol>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注意：这也是需要绑定github账号</p>\n<h1> 合并分支</h1>\n<p><a href=\"https://blog.csdn.net/chenyao1994/article/details/114686758\" target=\"_blank\" rel=\"noopener noreferrer\">https://blog.csdn.net/chenyao1994/article/details/114686758</a></p>\n<p>git合并分支（一看就懂）</p>\n<p>假如我们现在在dev分支上，刚开发完项目，执行了下列命令：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>想将dev分支合并到master分支，操作如下：</p>\n<p>1、首先切换到master分支上</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>2、如果是多人开发的话 需要把远程master上的代码pull下来</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>3、然后我们把dev分支的代码合并到master上</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>4、然后查看状态及执行提交命令</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>5、其他命令</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h1> 附件</h1>\n<h2> <em><strong>*GIT开发学习——合并分支的几种方法*</strong></em></h2>\n<p><a href=\"https://blog.csdn.net/fenglolo/article/details/125223433\" target=\"_blank\" rel=\"noopener noreferrer\">https://blog.csdn.net/fenglolo/article/details/125223433</a></p>\n",
      "date_published": "2022-09-28T00:00:00.000Z",
      "date_modified": "2023-04-17T06:04:06.765Z",
      "authors": [],
      "tags": [
        "运维"
      ]
    },
    {
      "title": "hello life",
      "url": "https://blog.lxip.top/happylife/thinker/th.html",
      "id": "https://blog.lxip.top/happylife/thinker/th.html",
      "content_html": "",
      "date_published": "2022-03-01T00:00:00.000Z",
      "date_modified": "2023-04-17T06:04:06.765Z",
      "authors": [],
      "tags": [
        "生活"
      ]
    },
    {
      "title": "关于本站",
      "url": "https://blog.lxip.top/blog/about.html",
      "id": "https://blog.lxip.top/blog/about.html",
      "summary": "一个基于 VuePress 的个人博客，主要记录日常开发问题和一些代码笔记。 服务提供 本站由以下内容提供服务 博客 仓库连接 本站所有内容及代码均开源，可通过下面 👇 的链接访问 keney仓库 (https://github.com/mynxg/)",
      "content_html": "<h1> 关于本站</h1>\n<p>一个基于 VuePress 的个人博客，主要记录日常开发问题和一些代码笔记。</p>\n<h2> 服务提供</h2>\n<p>本站由以下内容提供服务</p>\n<div class=\"project-panel\">\n              <a class=\"project project0\" href=\"https://www.cloudflare.com/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                <img src=\"https://image.liubing.me/2023/02/11/7f17f3cf426c3.png\" alt=\"Cloudflare\" class=\"image\">\n                <div class=\"name\">Cloudflare</div>\n                <div class=\"desc\">提供免费的 CDN 服务。</div>\n              </a>\n            \n              <a class=\"project project1\" href=\"https://vuepress.vuejs.org/zh/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                <img src=\"https://vuepress.vuejs.org/hero.png\" alt=\"VuePress\" class=\"image\">\n                <div class=\"name\">VuePress</div>\n                <div class=\"desc\">博客驱动引擎。</div>\n              </a>\n            \n              <a class=\"project project2\" href=\"https://theme-hope.vuejs.press/zh/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                <img src=\"https://theme-hope.vuejs.press/logo.png\" alt=\"VuePress Theme Hope\" class=\"image\">\n                <div class=\"name\">VuePress Theme Hope</div>\n                <div class=\"desc\">本站博客所用主题</div>\n              </a>\n            \n              <a class=\"project project3\" href=\"https://buddy.works\" rel=\"noopener noreferrer\" target=\"_blank\">\n                <img src=\"https://image.liubing.me/2023/02/11/a7643dcbbc234.png\" alt=\"Buddy\" class=\"image\">\n                <div class=\"name\">Buddy</div>\n                <div class=\"desc\">本站自动化打包构建发布工具。</div>\n              </a>\n            \n              <a class=\"project project4\" href=\"https://waline.js.org/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                <img src=\"https://image.liubing.me/2023/02/05/834597e9e927e.png\" alt=\"Waline\" class=\"image\">\n                <div class=\"name\">Waline</div>\n                <div class=\"desc\">本站评论所用服务。</div>\n              </a>\n            <div class=\"language-yaml line-numbers-mode\" data-ext=\"yml\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></div><h2> 博客</h2>\n",
      "date_modified": "2023-04-17T06:04:06.769Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "Java8新特性",
      "url": "https://blog.lxip.top/notes/javacore/Java8%E6%96%B0%E7%89%B9%E6%80%A7.html",
      "id": "https://blog.lxip.top/notes/javacore/Java8%E6%96%B0%E7%89%B9%E6%80%A7.html",
      "summary": "Optional类 引入 NPE问题就是在开发中经常碰到的NullPointerException，即空指针问题，Optional类就是用来优雅解决该问题的方案。 比如大家可能都有这样的经历：调用一个方法得到了返回值却不能直接将返回值作为参数去调用别的方法。我们首先要判断这个返回值是否为null，只有在非空的前提下才能将其作为其他方法的参数。 以用户类...",
      "content_html": "<h2> Optional类</h2>\n<h3> 引入</h3>\n<p><code>NPE</code>问题就是在开发中经常碰到的<code>NullPointerException</code>，即空指针问题，<code>Optional</code>类就是用来优雅解决该问题的方案。</p>\n<p>比如大家可能都有这样的经历：调用一个方法得到了返回值却不能直接将返回值作为参数去调用别的方法。我们首先要判断这个返回值是否为<code>null</code>，只有在非空的前提下才能将其作为其他方法的参数。</p>\n<p>以用户类和地址类举例说明其用法：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这种代码可能会出现空指针问题，在实际开发中，如果不使用<code>Optional</code>类，极其不优雅的处理方式如下：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"highlight-lines\"><br><br><div class=\"highlight-line\">&nbsp;</div><br><div class=\"highlight-line\">&nbsp;</div><br><div class=\"highlight-line\">&nbsp;</div><br><br><br><br><br></div><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面的代码保证了代码的第三行、第五行、第七行肯定不会出现空指针，但是这个代码真的是非常的冗长和丑陋。</p>\n<p><strong><code>java.util</code>包下面的<code>Optional</code>类提供了一套API来处理一个对象是否为<code>null</code>值的问题。</strong></p>\n<h3> 源码解读及各API的使用</h3>\n<p>部分源码：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>其本质是内部有一个泛型容器存储外部需要判断<code>null</code>值的对象，同时提供了两个私有的构造函数，不能被外部所调用，只能由类内部的函数调用</p>\n<ul>\n<li>无参数的构造函数提供一个<code>value=null</code>的<code>Optional</code>对象</li>\n<li>有参数的构造函数提供一个<code>value</code>一定不能为<code>null</code>的<code>Optional</code>对象，因为它调用了<code>Objects</code>类的<code>requireNonNull</code>方法。</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> of</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这是一个静态方法，调用有参数的构造函数，返回的是<code>value</code>值一定不为<code>null</code>的<code>Optional</code>对象，因为有参数的构造方法底层调用了<code>Objects</code>的<code>requireNonNull</code>方法，如果传入的<code>value</code>为<code>null</code>值，那么一定会报空指针异常。不允许<code>value</code>为<code>null</code>，实际开发中不常用。</p>\n<h4> empty</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这是一个静态方法，直接将类初始化时加载的<code>value</code>为<code>null</code>的<code>Optional</code>对象给用户。</p>\n<h4> ofNullable</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这是一个静态方法，代表<code>value</code>值是可为空的。如果为<code>null</code>值，那么返回一个<code>value</code>为<code>null</code>的<code>Optional</code>对象；如果不为<code>null</code>值，那么返回一个<code>value</code>不为<code>null</code>的<code>Option</code>对象。允许<code>value</code>为<code>null</code>，实际开发中常用。</p>\n<p><strong>与<code>of</code>的区别：当<code>value</code>值为<code>null</code>时，<code>of</code>会报<code>NullPointerException</code>异常；<code>ofNullable</code>不会<code>throw Exception</code>，<code>ofNullable</code>直接返回一个<code>EMPTY</code>对象（<code>value</code>为<code>null</code>的<code>Optional</code>对象）。</strong></p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">那是不是意味着，我们在项目中只用ofNullable函数而不用of函数呢?</p>\n<ul>\n<li>不是的，一个东西存在那么自然有存在的价值。</li>\n<li>当我们在运行过程中，不想隐藏<code>NullPointerException</code>，而是要立即报告，这种情况下就用<code>of</code>函数。</li>\n<li>但是不得不承认，这样的场景真的很少。</li>\n</ul>\n</div>\n<h4> orElse</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>这是一个实例方法，会首先判断调用它的<code>Optional</code>对象中的<code>value</code>值，如果为不为<code>null</code>，那么就返回该<code>value</code>值，如果为<code>null</code>，就返回传入的<code>other</code>对象。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> orElseGet</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>该方法与<code>orElse</code>方法类似，只不过传入的<code>other</code>对象可以通过一个<strong>提供者函数式接口</strong>提供，这里可以改成<code>lambda</code>表达式的形式。为了方便对代码的理解，所以上面写的测试代码稍显复杂，实际开发中可以使用<code>lambda</code>表达式简化。</p>\n<h4> orElseThrow</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果<code>value</code>值不为<code>null</code>，那么直接返回，如果<code>value</code>值为<code>null</code>，可以自定义业务逻辑功能说明语句抛出异常，不影响后续代码执行。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> map</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果有值，则对其执行调用<code>mapper</code>函数得到返回值，将创建包含<code>mapper</code>返回值的<code>Optional</code>对象作为<code>map</code>方法返回值，否则返回空<code>Optional</code>对象。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>map</code>方法用来对<code>Optional</code>实例的值执行一系列操作。通过一组实现了<code>Function</code>接口的<code>lambda</code>表达式传入操作。</p>\n<h4> flatMap</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果有值，为其执行<code>mapper</code>函数返回<code>Optional</code>对象类型返回值，否则返回空<code>Optional</code>对象。<code>flatMap</code>与<code>map</code>方法类似，区别在于<code>flatMap</code>中的<code>mapper</code>返回值必须是<code>Optional</code>对象。调用结束时，<code>flatMap</code>不会对结果用<code>Optional</code>封装。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code>flatMap</code>方法与<code>map</code>方法类似，区别在于<code>mapper</code>函数的返回值不同。<code>map</code>方法的<code>mapper</code>函数返回值可以是任何类型<code>T</code>，而<code>flatMap</code>方法的<code>mapper</code>函数必须是<code>Optional</code>对象。</p>\n<h4> filter</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果有值并且满足断言条件返回包含该值的<code>Optional</code>对象，否则返回空<code>Optional</code>对象。</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> isPresent</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> ifPresent</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> get</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> equals</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> hashCode</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4> toString</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 使用例子</h3>\n<ul>\n<li>基本使用</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>运行结果：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><ul>\n<li>在<code>Java8</code>中提高对象的<code>null</code>值安全性</li>\n</ul>\n<p>假设有如下的类层次结构：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>解决这种结构的深层嵌套路径是有点麻烦的，我们必须编写一堆<code>null</code>检查来确保不会导致一个 <code>NullPointerException</code>。</p>\n<p>我们可以通过利用<code>Optional</code>类型来摆脱所有这些<code>null</code>检查。<code>map</code>方法接收一个<code>Function</code>类型的<code>lambda</code>表达式，并自动将每个<code>function</code>的结果包装成一个<code>Optional</code>对象，这使我们能够在一行中进行多个 <code>map</code> 操作。</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3> 使用总结</h3>\n<p>使用<code>Optional</code>工具类判断一个对象的<code>NPE</code>问题，一定要先通过其静态方法<code>（of、empty、ofNullable）</code>获得<code>Optional</code>对象，进而通过一些实例方法进行一系列的操作获得最后的对象。</p>\n<table>\n<thead>\n<tr>\n<th>API方法名称</th>\n<th>用处</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>of</code></td>\n<td>为非<code>null</code>的值创建一个<code>Optional</code>对象。</td>\n</tr>\n<tr>\n<td><code>empty</code></td>\n<td>为<code>null</code>的值创建一个<code>Optional</code>对象。</td>\n</tr>\n<tr>\n<td><code>ofNullable</code></td>\n<td>为指定的值创建一个<code>Optional</code>对象，如果指定的值为<code>null</code>，则返回一个空的<code>Optional</code>对象。</td>\n</tr>\n<tr>\n<td><code>isPresent</code></td>\n<td>如果值不为<code>null</code>，则返回<code>true</code>，否则返回<code>false</code>。</td>\n</tr>\n<tr>\n<td><code>get</code></td>\n<td>如果<code>Optional</code>对象的值并不为空则将其返回，否则抛出<code>NoSuchElementException</code>。</td>\n</tr>\n<tr>\n<td><code>ifPresent</code></td>\n<td>如果<code>Optional</code>对象有值（不为空）则为其调用<code>Consumer</code>，否则不做处理</td>\n</tr>\n<tr>\n<td><code>orElse</code></td>\n<td>如果有值则将其返回，否则返回指定的其它值。</td>\n</tr>\n<tr>\n<td><code>orElseGet</code></td>\n<td><code>orElseGet</code>方法可以接受<code>Supplier</code>接口的实现用来生成默认值。</td>\n</tr>\n<tr>\n<td><code>orElseThrow</code></td>\n<td>如果有值则将其返回，否则抛出<code>Supplier</code>接口创建的异常。</td>\n</tr>\n<tr>\n<td><code>map</code></td>\n<td>如果有值，则对其执行调用<code>mapper</code>函数得到返回值，并且将创建包含<code>mapper</code>返回值的<code>Optional</code>对象作为<code>map</code>方法返回值，否则返回空<code>Optional</code>对象。</td>\n</tr>\n<tr>\n<td><code>flatMap</code></td>\n<td>如果有值，为其执行<code>mapper</code>函数返回<code>Optional</code>类型返回值，否则返回空<code>Optional</code>对象。<code>flatMap</code>与<code>map</code>方法类似，区别在于<code>flatMap</code>中的<code>mapper</code>返回值必须是<code>Optional</code>对象。调用结束时，<code>flatMap</code>不会对结果用<code>Optional</code>封装。</td>\n</tr>\n<tr>\n<td><code>filter</code></td>\n<td>如果有值并且满足断言条件返回包含该值的<code>Optional</code>对象，否则返回空<code>Optional</code>对象。</td>\n</tr>\n</tbody>\n</table>\n",
      "date_modified": "2023-04-17T06:04:06.856Z",
      "authors": [],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "实战项目【开源项目】",
      "url": "https://blog.lxip.top/questionskills/pracprojects/",
      "id": "https://blog.lxip.top/questionskills/pracprojects/",
      "content_html": "",
      "date_modified": "2023-04-17T06:04:06.857Z",
      "authors": [],
      "tags": [
        "实战项目"
      ]
    },
    {
      "title": "软件教程",
      "url": "https://blog.lxip.top/questionskills/softguide/",
      "id": "https://blog.lxip.top/questionskills/softguide/",
      "summary": "组件库 vue-clock2 (https://github.com/bestvist/vue-clock2/)：一款简单的图形时钟组件，可以自定义时间、颜色、边框、背景、大小。; 官网：GitHub - bestvist/vue-clock2: vue clock component (https://github.com/bestvist/vue-...",
      "content_html": "<h2> 组件库</h2>\n<ul>\n<li><a href=\"https://github.com/bestvist/vue-clock2/\" target=\"_blank\" rel=\"noopener noreferrer\">vue-clock2</a>：一款简单的<strong>图形时钟组件</strong>，可以自定义时间、颜色、边框、背景、大小。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://github.com/bestvist/vue-clock2/\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub - bestvist/vue-clock2: vue clock component</a></p>\n<p>演示：<a href=\"https://bestvist.github.io/vue-clock2/docs/\" target=\"_blank\" rel=\"noopener noreferrer\">vue-clock2 | vue clock component (bestvist.github.io)</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/javaLuo/vue-flip-down\" target=\"_blank\" rel=\"noopener noreferrer\">vue-flip-down</a>：一款简单的<strong>翻页倒计时组件</strong>，可以自定义结束时间、显示类型、空隙间的文字。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://github.com/javaLuo/vue-flip-down\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub - javaLuo/vue-flip-down: vue 翻页倒计时组件 妙啊</a></p>\n<p>演示：<a href=\"https://isluo.com/work/vue-flip-down/\" target=\"_blank\" rel=\"noopener noreferrer\">Vue-flip-down DEMO (isluo.com)</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://codepen.io/quintiontang/pen/MWrywqW\" target=\"_blank\" rel=\"noopener noreferrer\">crayon-clock</a>：一款<strong>极简时钟组件</strong>。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://www.devpoint.cn/article/390.shtml\" target=\"_blank\" rel=\"noopener noreferrer\">VUE构建数字时钟组件|在线数字时钟_devpoint</a></p>\n<p>演示：<a href=\"https://codepen.io/quintiontang/pen/MWrywqW\" target=\"_blank\" rel=\"noopener noreferrer\">crayon-clock (codepen.io)</a></p>\n<p>代码：<a href=\"https://gitee.com/xt-gitee/codes/cv451silwfzm63dqa9xe863\" target=\"_blank\" rel=\"noopener noreferrer\">https://gitee.com/xt-gitee/codes/cv451silwfzm63dqa9xe863</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/kuan1/kuan-vue-flip-clock\" target=\"_blank\" rel=\"noopener noreferrer\">kuan-vue-flip-clock</a>：一款类似于经典<code>flip</code>的<strong>翻页时钟组件</strong>。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://github.com/kuan1/kuan-vue-flip-clock\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub - kuan1/kuan-vue-flip-clock: 使用vue制作翻页时钟</a></p>\n<p>演示：<a href=\"https://www.kuan1.top/kuan-vue-flip-clock/\" target=\"_blank\" rel=\"noopener noreferrer\">kuan-vue-flip-clock (kuan1.top)</a></p>\n</blockquote>\n<h2> 工具库</h2>\n<ul>\n<li><a href=\"https://hutool.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">Hutool</a>：一个小而全的<code>Java</code>工具类库，通过<strong>静态方法封装</strong>，降低相关<code>API</code>的学习成本，提高工作效率，使<code>Java</code>拥有函数式语言般的优雅，让<code>Java</code>语言也可以“甜甜的”。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://hutool.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">Hutool — 🍬A set of tools that keep Java sweet.</a></p>\n<p><code>Gitee</code>地址：<a href=\"https://gitee.com/dromara/hutool/\" target=\"_blank\" rel=\"noopener noreferrer\">hutool: 🍬小而全的Java工具类库，使Java拥有函数式语言般的优雅，让Java语言也可以“甜甜的”。 (gitee.com)</a></p>\n<p><code>API</code>文档：<a href=\"https://apidoc.gitee.com/dromara/hutool/\" target=\"_blank\" rel=\"noopener noreferrer\">Overview (hutool-码云(gitee.com))</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/DiUS/java-faker\" target=\"_blank\" rel=\"noopener noreferrer\">java-faker</a>：一个获得<strong>假数据</strong>的神器【 <strong>Faker-骗子</strong> 】。</li>\n</ul>\n<blockquote>\n<p><code>Github</code>地址：<a href=\"https://github.com/DiUS/java-faker\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub - DiUS/java-faker: Brings the popular ruby faker gem to Java</a></p>\n<p><code>API</code>文档：<a href=\"http://dius.github.io/java-faker/apidocs/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">Overview (Java Faker 0.19-SNAPSHOT API) (dius.github.io)</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://guava.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">Guava</a>：<code>Guava</code>是<code>Google</code>提供的一组<strong>核心<code>Java</code>库</strong>，其中包括新的集合类型（如<code>multimap</code>和<code>multiset</code>）、不可变集合、图形库以及用于并发、<code>I/O</code>、哈希、缓存、原语、字符串等的实用程序。它广泛用于<code>Google</code>中的大多数<code>Java</code>项目，也被许多其他公司广泛使用。</li>\n</ul>\n<blockquote>\n<p><code>Github</code>地址：<a href=\"https://github.com/google/guava\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub - google/guava: Google core libraries for Java</a></p>\n<p>官方文档：<a href=\"https://github.com/google/guava/wiki\" target=\"_blank\" rel=\"noopener noreferrer\">Home · google/guava Wiki · GitHub</a></p>\n<p>中文文档：<a href=\"https://www.yiibai.com/guava/guava_environment.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Guava教程</a></p>\n</blockquote>\n<h2> Mac软件</h2>\n<ul>\n<li><a href=\"https://mos.caldis.me/\" target=\"_blank\" rel=\"noopener noreferrer\">Mos</a>：<code>MagicMouse</code>真的是太难用了，<code>Mac</code>上外接鼠标之后，会出现<strong>滚动卡顿</strong>和<strong>自然方向</strong>的问题，通过该软件可以<strong>实现<code>平滑滚动</code>和<code>反转方向</code></strong>，还可以自定义滚动的速度、持续时长，同时该软件<code>免费开源</code>。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://mos.caldis.me/\" target=\"_blank\" rel=\"noopener noreferrer\">MOS | 一个用于在 MacOS 上平滑你的鼠标滚动效果或单独设置滚动方向的小工具, 让你的滚轮爽如触控板 (caldis.me)</a></p>\n<p><code>Github</code>地址：<a href=\"https://github.com/Caldis/Mos\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Caldis/Mos</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/dwarvesf/hidden\" target=\"_blank\" rel=\"noopener noreferrer\">Hidden Bar</a>：<strong>隐藏<code>Mac</code>菜单栏</strong>的小工具，免费开源。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://dwarves.foundation/opensource/\" target=\"_blank\" rel=\"noopener noreferrer\">https://dwarves.foundation/opensource/</a></p>\n<p><code>Github</code>地址：<a href=\"https://github.com/dwarvesf/hidden\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/dwarvesf/hidden</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/Splode/pomotroid\" target=\"_blank\" rel=\"noopener noreferrer\">Pomotroid</a>：<code>Pomotroid</code>是一个简单且可配置的<strong>番茄计时器</strong>。</li>\n</ul>\n<blockquote>\n<p><code>Github</code>地址：<a href=\"https://github.com/Splode/pomotroid\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Splode/pomotroid</a></p>\n<p>官网：<a href=\"https://splode.github.io/pomotroid/\" target=\"_blank\" rel=\"noopener noreferrer\">https://splode.github.io/pomotroid/</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/CyC2018/Text-Typesetting\" target=\"_blank\" rel=\"noopener noreferrer\">Text-Typesetting</a>：中英混排文档<strong>在线排版工具</strong>。</li>\n</ul>\n<blockquote>\n<p><code>Github</code>地址：<a href=\"https://github.com/CyC2018/Text-Typesetting\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/CyC2018/Text-Typesetting</a></p>\n<p>官网：<a href=\"https://cyc2018.github.io/Text-Typesetting/\" target=\"_blank\" rel=\"noopener noreferrer\">https://cyc2018.github.io/Text-Typesetting/</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://gitee.com/Doocs/md\" target=\"_blank\" rel=\"noopener noreferrer\">md</a>：一款高度简洁的<strong>微信公众号推文 <code>Markdown</code> 编辑器</strong>。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://doocs.gitee.io/md/\" target=\"_blank\" rel=\"noopener noreferrer\">https://doocs.gitee.io/md/</a></p>\n<p>官网：<a href=\"https://doocs.github.io/md\" target=\"_blank\" rel=\"noopener noreferrer\">https://doocs.github.io/md</a></p>\n<p><code>Github</code>地址：<a href=\"https://github.com/doocs/md\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/doocs/md</a></p>\n<p><code>Gitee</code>地址：<a href=\"https://gitee.com/Doocs/md\" target=\"_blank\" rel=\"noopener noreferrer\">https://gitee.com/Doocs/md</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://apps.apple.com/cn/app/input-source-pro/id1537056428?mt=12\" target=\"_blank\" rel=\"noopener noreferrer\">Input Source Pro</a>：自动<strong>显示当前输入法名称</strong>的工具。</li>\n</ul>\n<blockquote>\n<p>下载地址：<a href=\"https://apps.apple.com/cn/app/input-source-pro/id1537056428?mt=12\" target=\"_blank\" rel=\"noopener noreferrer\">https://apps.apple.com/cn/app/input-source-pro/id1537056428?mt=12</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/obsproject/obs-studio\" target=\"_blank\" rel=\"noopener noreferrer\">obs-studio</a>：用于<strong>视频录制和直播</strong>的免费开源软件。</li>\n</ul>\n<blockquote>\n<p><code>Github</code>地址：<a href=\"https://github.com/obsproject/obs-studio\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/obsproject/obs-studio</a></p>\n<p>官网：<a href=\"https://obsproject.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://obsproject.com/</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md\" target=\"_blank\" rel=\"noopener noreferrer\">awesome-mac</a>：收集了各种类别非常好用的 <strong><code>Mac</code> 应用程序、软件以及工具。</strong></li>\n</ul>\n<blockquote>\n<p><code>Github</code>地址：<a href=\"https://github.com/jaywcjlove/awesome-mac\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/jaywcjlove/awesome-mac</a></p>\n<p>官网：<a href=\"https://git.io/macx\" target=\"_blank\" rel=\"noopener noreferrer\">https://git.io/macx</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://gitee.com/xwintop/xJavaFxTool\" target=\"_blank\" rel=\"noopener noreferrer\">xJavaFxTool</a>：基于<code>JavaFx</code>搭建的<strong>实用小工具集合</strong>，方便开发过程中的代码编写与调试。</li>\n</ul>\n<blockquote>\n<p><code>Api Doc</code>：<a href=\"https://apidoc.gitee.com/xwintop/xJavaFxTool/\" target=\"_blank\" rel=\"noopener noreferrer\">https://apidoc.gitee.com/xwintop/xJavaFxTool/</a></p>\n<p><code>Gitee</code>地址：<a href=\"https://gitee.com/xwintop/xJavaFxTool\" target=\"_blank\" rel=\"noopener noreferrer\">https://gitee.com/xwintop/xJavaFxTool</a></p>\n<p><code>Github</code>地址：<a href=\"https://github.com/864381832/xJavaFxTool\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/864381832/xJavaFxTool</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/fvarrui/JavaPackager\" target=\"_blank\" rel=\"noopener noreferrer\">JavaPackager</a>：<code>Java</code>应用的<strong>打包工具</strong>，可以为<code>Windows</code>、<code>Mac</code>、<code>Linux</code>打包应用。</li>\n</ul>\n<blockquote>\n<p><code>Github</code>地址：<a href=\"https://github.com/fvarrui/JavaPackager\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/fvarrui/JavaPackager</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://www.coley.software/Recaf/\" target=\"_blank\" rel=\"noopener noreferrer\">Recaf</a>：基于JavaFx构建的开源<strong>字节码编辑器。</strong></li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://www.coley.software/Recaf/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.coley.software/Recaf/</a></p>\n<p><code>Github</code>地址：<a href=\"https://github.com/Col-E/Recaf\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/Col-E/Recaf</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://apps.apple.com/cn/app/menubarx-%E5%BC%BA%E5%A4%A7%E7%9A%84%E8%8F%9C%E5%8D%95%E6%A0%8F%E6%B5%8F%E8%A7%88%E5%99%A8/id1575588022?mt=12\" target=\"_blank\" rel=\"noopener noreferrer\">MenubarX</a>：一款强大的<code>Mac</code><strong>菜单栏浏览器</strong>。</li>\n</ul>\n<blockquote>\n<p>下载链接：<a href=\"https://apps.apple.com/cn/app/menubarx-%E5%BC%BA%E5%A4%A7%E7%9A%84%E8%8F%9C%E5%8D%95%E6%A0%8F%E6%B5%8F%E8%A7%88%E5%99%A8/id1575588022?mt=12\" target=\"_blank\" rel=\"noopener noreferrer\">https://apps.apple.com/cn/app/menubarx-强大的菜单栏浏览器/id1575588022?mt=12</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://www.apicloud.com/\" target=\"_blank\" rel=\"noopener noreferrer\">apicloud</a>：移动<strong>低代码专家，可以使用其<code>APICloud Studio 3</code>开发工具进行快速开发。</strong></li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://www.apicloud.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.apicloud.com/</a></p>\n<p><code>APICloud Studio 3</code>下载地址：<a href=\"https://www.apicloud.com/studio3\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.apicloud.com/studio3</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://www.audacityteam.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Audacity</a>：免费开源且跨平台的<strong>音频编辑软件</strong>，可以用来实现降噪。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://www.audacityteam.org/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.audacityteam.org/</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://handbrake.fr/\" target=\"_blank\" rel=\"noopener noreferrer\">HandBrake</a>：<code>HandBrake</code>是一款适用于<code>Mac</code>系统的<strong>视频压缩软件（免费开源）</strong>，可压缩<code>MP4</code>视频和其他文件格式，软件可以用于调整诸如帧率，码率，分辨率等参数，以便轻松地压缩视频大小。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://handbrake.fr/\" target=\"_blank\" rel=\"noopener noreferrer\">https://handbrake.fr/</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/keycastr/keycastr\" target=\"_blank\" rel=\"noopener noreferrer\">keycastr</a>：一个开源免费的在桌面上<strong>显示键盘按键</strong>的小工具。</li>\n</ul>\n<blockquote>\n<p><code>Github</code>地址：<a href=\"https://github.com/keycastr/keycastr\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/keycastr/keycastr</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://www.warp.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">warp</a>：<code>21世纪</code>的专为程序员开发的<strong>终端工具</strong>。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://www.warp.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.warp.dev/</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://swh.app/\" target=\"_blank\" rel=\"noopener noreferrer\">SwitchHosts</a>：<strong>管理<code>host</code>文件</strong>的开源免费工具。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://swh.app/\" target=\"_blank\" rel=\"noopener noreferrer\">https://swh.app/</a></p>\n<p><code>Gitee</code>地址：<a href=\"https://gitee.com/mirrors/switchhosts\" target=\"_blank\" rel=\"noopener noreferrer\">https://gitee.com/mirrors/switchhosts</a></p>\n<p><code>Github</code>地址：<a href=\"https://github.com/oldj/SwitchHosts\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/oldj/SwitchHosts</a></p>\n</blockquote>\n",
      "date_modified": "2023-04-17T06:04:06.881Z",
      "authors": [],
      "tags": [
        "软件教程"
      ]
    },
    {
      "title": "系统设计【开源项目】",
      "url": "https://blog.lxip.top/questionskills/systemdesign/",
      "id": "https://blog.lxip.top/questionskills/systemdesign/",
      "summary": "专业软件 RuanCang (https://ruancang.net/)：专业软件免费下载。; 官网：https://ruancang.net/",
      "content_html": "<h2> 专业软件</h2>\n<ul>\n<li><a href=\"https://ruancang.net/\" target=\"_blank\" rel=\"noopener noreferrer\">RuanCang</a>：<strong>专业软件</strong>免费下载。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://ruancang.net/\" target=\"_blank\" rel=\"noopener noreferrer\">https://ruancang.net/</a></p>\n</blockquote>\n",
      "date_modified": "2023-04-17T06:04:06.882Z",
      "authors": [],
      "tags": [
        "系统设计"
      ]
    },
    {
      "title": "技术教程【开源项目】",
      "url": "https://blog.lxip.top/questionskills/techguide/",
      "id": "https://blog.lxip.top/questionskills/techguide/",
      "summary": "CS CS-Notes (https://github.com/CyC2018/CS-Notes)：技术面试必备基础知识、Leetcode、计算机操作系统、计算机网络、系统设计。; Github地址：https://github.com/CyC2018/CS-Notes 官网：http://www.cyc2018.xyz/ Java相关 advance...",
      "content_html": "<h2> CS</h2>\n<ul>\n<li><a href=\"https://github.com/CyC2018/CS-Notes\" target=\"_blank\" rel=\"noopener noreferrer\">CS-Notes</a>：技术面试<strong>必备基础知识</strong>、<code>Leetcode</code>、计算机操作系统、计算机网络、系统设计。</li>\n</ul>\n<blockquote>\n<p><code>Github</code>地址：<a href=\"https://github.com/CyC2018/CS-Notes\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/CyC2018/CS-Notes</a></p>\n<p>官网：<a href=\"http://www.cyc2018.xyz/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.cyc2018.xyz/</a></p>\n</blockquote>\n<h2> Java相关</h2>\n<ul>\n<li><a href=\"https://gitee.com/Doocs/advanced-java\" target=\"_blank\" rel=\"noopener noreferrer\">advanced-java</a>：互联网 <code>Java</code> 工程师<strong>进阶知识完全扫盲</strong>：涵盖高并发、分布式、高可用、微服务、海量数据处理等领域知识。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://doocs.gitee.io/advanced-java/#/\" target=\"_blank\" rel=\"noopener noreferrer\">https://doocs.gitee.io/advanced-java/#/</a></p>\n<p>官网：<a href=\"https://doocs.github.io/advanced-java/#/\" target=\"_blank\" rel=\"noopener noreferrer\">https://doocs.github.io/advanced-java/#/</a></p>\n<p><code>Github</code>地址：<a href=\"https://github.com/doocs/advanced-java\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/doocs/advanced-java</a></p>\n<p><code>Gitee</code>地址：<a href=\"https://gitee.com/Doocs/advanced-java\" target=\"_blank\" rel=\"noopener noreferrer\">https://gitee.com/Doocs/advanced-java</a></p>\n</blockquote>\n<h2> 源码相关</h2>\n<ul>\n<li><a href=\"https://gitee.com/Doocs/source-code-hunter\" target=\"_blank\" rel=\"noopener noreferrer\">source-code-hunter</a>：从源码层面，剖析<strong>挖掘互联网行业主流技术的底层实现原理</strong>，为广大开发者 “提升技术深度” 提供便利。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://doocs.gitee.io/source-code-hunter/#/\" target=\"_blank\" rel=\"noopener noreferrer\">https://doocs.gitee.io/source-code-hunter/#/</a></p>\n<p>官网：<a href=\"https://doocs.github.io/source-code-hunter/#/\" target=\"_blank\" rel=\"noopener noreferrer\">https://doocs.github.io/source-code-hunter/#/</a></p>\n<p><code>Github</code>地址：<a href=\"https://github.com/doocs/source-code-hunter\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/doocs/source-code-hunter</a></p>\n<p><code>Gitee</code>地址：<a href=\"https://gitee.com/Doocs/source-code-hunter\" target=\"_blank\" rel=\"noopener noreferrer\">https://gitee.com/Doocs/source-code-hunter</a></p>\n</blockquote>\n<h2> 算法和数据结构</h2>\n<ul>\n<li><a href=\"https://gitee.com/Doocs/leetcode\" target=\"_blank\" rel=\"noopener noreferrer\">leetcode</a>：多种编程语言<strong>实现 <code>LeetCode</code></strong>。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://doocs.github.io/leetcode/#/\" target=\"_blank\" rel=\"noopener noreferrer\">https://doocs.github.io/leetcode/#/</a></p>\n<p>官网：<a href=\"https://doocs.gitee.io/leetcode/#/\" target=\"_blank\" rel=\"noopener noreferrer\">https://doocs.gitee.io/leetcode/#/</a></p>\n<p><code>Github</code>地址：<a href=\"https://github.com/doocs/leetcode\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/doocs/leetcode</a></p>\n<p><code>Gitee</code>地址：<a href=\"https://gitee.com/Doocs/leetcode\" target=\"_blank\" rel=\"noopener noreferrer\">https://gitee.com/Doocs/leetcode</a></p>\n</blockquote>\n<h2> JVM相关</h2>\n<ul>\n<li><a href=\"https://gitee.com/Doocs/jvm\" target=\"_blank\" rel=\"noopener noreferrer\">jvm</a>：<strong><code>JVM</code> 底层原理</strong>最全知识总结</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://doocs.gitee.io/jvm/\" target=\"_blank\" rel=\"noopener noreferrer\">https://doocs.gitee.io/jvm/</a></p>\n<p>官网：<a href=\"https://doocs.github.io/jvm/\" target=\"_blank\" rel=\"noopener noreferrer\">https://doocs.github.io/jvm/</a></p>\n<p><code>Github</code>地址：<a href=\"https://github.com/doocs/jvm\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/doocs/jvm</a></p>\n<p><code>Gitee</code>地址：<a href=\"https://gitee.com/Doocs/jvm\" target=\"_blank\" rel=\"noopener noreferrer\">https://gitee.com/Doocs/jvm</a></p>\n</blockquote>\n",
      "date_modified": "2023-04-17T06:04:06.884Z",
      "authors": [],
      "tags": [
        "技术教程"
      ]
    },
    {
      "title": "书籍资源",
      "url": "https://blog.lxip.top/resources/books/",
      "id": "https://blog.lxip.top/resources/books/",
      "summary": "资源名称 分享链接 ------------------------------------------ ----------------------------------------- 《Labuladong的算法小抄》 https://www.aliyundrive.com/s/8ouAjxFVgUX 《小傅哥的IDEA插件开发手册》 https...",
      "content_html": "<table>\n<thead>\n<tr>\n<th>资源名称</th>\n<th>分享链接</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>《Labuladong的算法小抄》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/8ouAjxFVgUX\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/8ouAjxFVgUX</a></td>\n</tr>\n<tr>\n<td><code>《小傅哥的IDEA插件开发手册》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/Pq7xVp9bXdR\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/Pq7xVp9bXdR</a></td>\n</tr>\n<tr>\n<td><code>《疯狂Java讲义第四版》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/Yd2L8XtGWUa\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/Yd2L8XtGWUa</a></td>\n</tr>\n<tr>\n<td><code>《Java核心技术-卷1-基础知识》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/EvpXjq55LXn\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/EvpXjq55LXn</a></td>\n</tr>\n<tr>\n<td><code>《Java核心技术-卷2-高级特性》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/hT5RQDe6q1k\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/hT5RQDe6q1k</a></td>\n</tr>\n<tr>\n<td><code>《Linux命令速查手册》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/ophXiMFVPrB\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/ophXiMFVPrB</a></td>\n</tr>\n<tr>\n<td><code>《鸟哥的Linux私房菜-高清》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/bd9PeqCf82N\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/bd9PeqCf82N</a></td>\n</tr>\n<tr>\n<td><code>《鸟哥的Linux私房菜-非高清》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/e9ag9zBwTCS\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/e9ag9zBwTCS</a></td>\n</tr>\n<tr>\n<td><code>《数学建模算法与应用-第二版-司守奎》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/uDtSpLzFqz2\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/uDtSpLzFqz2</a></td>\n</tr>\n<tr>\n<td><code>《统计学习方法-李航》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/Gae5A3tJaZn\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/Gae5A3tJaZn</a></td>\n</tr>\n<tr>\n<td><code>《Matlab神经网络30个案例分析》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/EVibkTrcFex\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/EVibkTrcFex</a></td>\n</tr>\n<tr>\n<td><code>《具有AI功能加持的终端工具warp使用总结》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/kXKqP4RqyUD\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/kXKqP4RqyUD</a></td>\n</tr>\n</tbody>\n</table>\n",
      "date_modified": "2023-04-17T06:04:06.886Z",
      "authors": [],
      "tags": [
        "书籍"
      ]
    },
    {
      "title": "快速导航",
      "url": "https://blog.lxip.top/resources/share/",
      "id": "https://blog.lxip.top/resources/share/",
      "summary": "搜索引擎 开源社区 优质博客 在线工具 在线教程 文档相关 其他导航",
      "content_html": "<h2> 搜索引擎</h2>\n<h2> 开源社区</h2>\n<h2> 优质博客</h2>\n<h2> 在线工具</h2>\n<h2> 在线教程</h2>\n<h2> 文档相关</h2>\n<h2> 其他导航</h2>\n",
      "date_modified": "2023-04-17T06:04:06.895Z",
      "authors": [],
      "tags": [
        "快速导航"
      ]
    },
    {
      "title": "个人导航",
      "url": "https://blog.lxip.top/resources/share/nav.html",
      "id": "https://blog.lxip.top/resources/share/nav.html",
      "content_html": "<!-- <NavCard arr='[{\"title\":\"One Nav\",\"url\":\"https://nav.lxip.top/\",\"desc\":\"导航\",\"icon\":\"/navicon/pdai.ico\"},\n{\"title\":\" Nginx Proxy Manager\",\"url\":\"https://npm.lxip.top/\",\"desc\":\"反向代理\",\"icon\":\"/navicon/ruan.ico\"},\n{\"title\":\"单服务器数据检测\",\"url\":\"https://watch.lxip.top/\",\"desc\":\"单服务器数据检测\",\"icon\":\"/navicon/r2coding.png\"},\n{\"title\":\"导航页\",\"url\":\"https://navs.lxip.top/\",\"desc\":\"导航\",\"icon\":\"/navicon/yuque.png\"},\n{\"title\":\"兰空图床\",\"url\":\"http://139.224.55.130:9080\",\"desc\":\"方向代理有问题~~~\",\"icon\":\"/navicon/dd.jpg\"}\n]'></NavCard> -->\n",
      "date_modified": "2023-04-17T06:04:06.896Z",
      "authors": [],
      "tags": [
        "快速导航"
      ]
    },
    {
      "title": "编程知识库",
      "url": "https://blog.lxip.top/resources/share/navlearn.html",
      "id": "https://blog.lxip.top/resources/share/navlearn.html",
      "summary": "介绍 编程知识库是一个涵盖各种编程语言和技术的资源库，旨在为所有程序员提供一个有趣、充实的学习体验。我们深信，对于那些充满好奇心和求知欲的人来说，编程可以是一项非常有趣和充实的活动。 编程知识库致力于为所有编程初学者和专业人士提供一个包罗万象的学习平台，涵盖各种不同级别的课程和项目，适合不同的学习目标和水平。我们的知识库不仅包含最新的技术和语言，还提供...",
      "content_html": "<h2> 介绍</h2>\n<blockquote>\n<p>编程知识库是一个涵盖各种编程语言和技术的资源库，旨在为所有程序员提供一个有趣、充实的学习体验。我们深信，对于那些充满好奇心和求知欲的人来说，编程可以是一项非常有趣和充实的活动。</p>\n<p>编程知识库致力于为所有编程初学者和专业人士提供一个包罗万象的学习平台，涵盖各种不同级别的课程和项目，适合不同的学习目标和水平。我们的知识库不仅包含最新的技术和语言，还提供了许多经典的编程问题和解决&gt;方案，可以帮助你深入了解编程世界的本质。</p>\n<p>我们的编程知识库不仅提供丰富的学习资源，还提供交流和互动的平台。你可以通过讨论区或社交媒体与其他编程爱好者交流想法、讨论问题或分享你的项目。我们相信，通过互动和分享，你可以更快、更有趣地学习编程，并与其他程序员建立有意义的联系。</p>\n<p>无论你是一名新手，还是一名专业人士，编程知识库都是一个有趣、充实的学习平台，让你掌握最新的技术和知识，探索编程的乐趣和创造力。快来加入我们，一起探索编程世界的精彩吧！</p>\n</blockquote>\n<h2> 后端知识库</h2>\n\n<h2> 前端知识库</h2>\n\n<h2> 运维知识库</h2>\n\n",
      "date_modified": "2023-04-17T06:04:06.900Z",
      "authors": [],
      "tags": [
        "快速导航",
        "编程知识库"
      ]
    },
    {
      "title": "影音资源",
      "url": "https://blog.lxip.top/resources/videos/",
      "id": "https://blog.lxip.top/resources/videos/",
      "content_html": "",
      "date_modified": "2023-04-17T06:04:06.900Z",
      "authors": [],
      "tags": [
        "影视",
        "音乐"
      ]
    },
    {
      "title": "tomcat服务器",
      "url": "https://blog.lxip.top/notes/javacore/javaweb/javaweb_tomcat.html",
      "id": "https://blog.lxip.top/notes/javacore/javaweb/javaweb_tomcat.html",
      "summary": "1.HTTP协议简介 超文本传输协议（英文：HyperText Transfer Protocol，缩写：HTTP）是一种用于分布式、协作式和超媒体信息 系统的应用层协议。HTTP是万维网的数据通信的基础。 HTTP的发展是由蒂姆·伯纳斯-李于1989年在欧洲核子研究组织（CERN）所发起。HTTP的标准制定由万维网协会 （World Wide Web...",
      "content_html": "<h2> 1.HTTP协议简介</h2>\n<p>超文本传输协议（英文：HyperText Transfer Protocol，缩写：HTTP）是一种用于分布式、协作式和超媒体信息 系统的应用层协议。HTTP是万维网的数据通信的基础。 HTTP的发展是由蒂姆·伯纳斯-李于1989年在欧洲核子研究组织（CERN）所发起。HTTP的标准制定由万维网协会 （World Wide Web Consortium，W3C）和互联网工程任务组（Internet Engineering Task Force，IETF）进行协 调，最终发布了一系列的RFC，其中最著名的是1999年6月公布的 RFC 2616，定义了HTTP协议中现今广泛使用的 一个版本——HTTP 1.1。</p>\n<figure><figcaption>image-20221019161616266</figcaption></figure>\n<h2> 2.HTTP 请求/响应的步骤</h2>\n<p>2.1 客户端连接到Web服务器 一个HTTP客户端，通常是浏览器，与Web服务器的HTTP端口（默认为80）建立一个TCP套接字连接。 例如:<a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.baidu.com</a>。</p>\n<p>2.2 发送HTTP请求 通过TCP套接字，客户端向Web服务器发送一个文本的请求报文，一个请求报文由请求行、请求头部、空行和请求 数据4部分组成。</p>\n<p>2.3 服务器接受请求并返回HTTP响应 Web服务器解析请求，定位请求资源。服务器将资源复本写到TCP套接字，由客户端读取。一个响应由状态行、响 应头部、空行和响应数据4部分组成。</p>\n<p>2.4 释放TCP连接 在HTTP/1.0中默认使用短连接。也就是说，客户端和服务器每进行一次HTTP操作，就建立一次连接，任务结束就 中断连接。当客户端浏览器访问的某个HTML或其他类型的Web页中包含有其他的Web资源（如JavaScript文件、 图像文件、CSS文件等），每遇到这样一个Web资源，浏览器就会重新建立一个HTTP会话。</p>\n<p>而从HTTP/1.1起，默认使用长连接，用以保持连接特性。使用长连接的HTTP协议，会在响应头加入这行代码：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>在使用长连接的情况下，当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，客 户端再次访问这个服务器时，会继续使用这一条已经建立的连接。Keep-Alive不会永久保持连接，它有一个保持时 间，可以在不同的服务器软件（如Apache）中设定这个时间。实现长连接需要客户端和服务端都支持长连接。 HTTP协议的长连接和短连接，实质上是TCP协议的长连接和短连接。</p>\n<p>2.5 客户端浏览器解析HTML内容 客户端浏览器首先解析状态行，查看表明请求是否成功的状态代码。然后解析每一个响应头，响应头告知以下为若 干字节的HTML文档和文档的字符集。客户端浏览器读取响应数据HTML，根据HTML的语法对其进行格式化，并在 浏览器窗口中显示。 例如：在浏览器地址栏键入URL，按下回车之后会经历以下流程：</p>\n<p>​\t 1.浏览器向 DNS 服务器请求解析该 URL 中的域名所对应的 IP 地址;</p>\n<ol start=\"2\">\n<li>解析出 IP 地址后，根据该 IP 地址和默认端口 80，和服务器建立TCP连接;</li>\n<li>浏览器发出读取文件(URL 中域名后面部分对应的文件)的HTTP 请求，该请求报文作为 TCP 三次握手的第三个 报文的数据发送给服务器;</li>\n<li>服务器对浏览器请求作出响应，并把对应的 html 文本发送给浏览器;</li>\n<li>浏览器将该 html 文本并显示内容;</li>\n</ol>\n<figure><figcaption>image-20221019202244080</figcaption></figure>\n<figure><figcaption>image-20221019202313587</figcaption></figure>\n<h2> 3.HTTP请求方法</h2>\n<p>HTTP/1.1协议中共定义了八种方法（也叫“动作”）来以不同方式操作指定的资源：</p>\n<p>GET</p>\n<p>向指定的资源发出“显示”请求。使用GET方法应该只用在读取数据，而不应当被用于产生“副作用”的操作中，例如在 Web Application中。其中一个原因是GET可能会被网络蜘蛛等随意访问。</p>\n<p>HEAD</p>\n<p>与GET方法一样，都是向服务器发出指定资源的请求。只不过服务器将不传回资源的本文部分。它的好处在于，使 用这个方法可以在不必传输全部内容的情况下，就可以获取其中“关于该资源的信息”（元信息或称元数据）。</p>\n<p>POST 向指定资源提交数据，请求服务器进行处理（例如提交表单或者上传文件）。数据被包含在请求本文中。这个请求 可能会创建新的资源或修改现有资源，或二者皆有。 PUT 向指定资源位置上传其最新内容。</p>\n<p>DELETE</p>\n<p>请求服务器删除Request-URI所标识的资源。</p>\n<p>TRACE</p>\n<p>回显服务器收到的请求，主要用于测试或诊断。</p>\n<p>OPTIONS</p>\n<p>这个方法可使服务器传回该资源所支持的所有HTTP请求方法。用'*'来代替资源名称，向Web服务器发送OPTIONS 请求，可以测试服务器功能是否正常运作。</p>\n<p>CONNECT</p>\n<h2> 4. 两种开发模型</h2>\n<p>⑴C/S又称Client/Server或客户/服务器模式。服务器通常采用高性能的PC、工作站或小型机，客户端需要安装专 用的客户端软件。如QQ,微信等软件</p>\n<p>B/S是Brower/Server的缩写，客户机上只要安装一个浏览器（Browser）。Browser/Server是建立在广域网的基 础上的.</p>\n<p>⑵CS和BS结构各自的优、缺点</p>\n<p>(1) C/S的优点是能充分发挥客户端PC的处理能力，很多工作可以在客户端处理后再提交给服务器。对应的优点就是 客户端响应速度快。</p>\n<p>缺点主要有以下几个</p>\n<ol>\n<li>客户端需要安装专用的客户端软件。首先涉及到安装的工作量，其次任何一台电脑出问题，如病毒、硬件损坏， 都需要进行安装或维护。特别是有很多分部或专卖店的情况，不是工作量的问题，而是路程的问题。还有，系统软 件升级时，每一台客户机需要重新安装，其维护和升级成本非常高。</li>\n<li>B/S最大的优点就是可以在任何地方进行操作而不用安装任何专门的软件。只要有一台能上网的电脑就能使用， 客户端零维护。系统的扩展非常容易，只要能上网，就可以使用了。甚至可以在线申请，通过公司内部的安全认证 （如CA证书）后，不需要人的参与，系统可以自动分配给用户一个账号进入系统。</li>\n</ol>\n<h2> 5. Web服务器的分类</h2>\n<p>Web服务器是运行及发布Web应用的容器，只有将开发的Web项目放置到该容器中，才能使网络中的所有用户通过 浏览器进行访问。开发Java Web应用所采用的服务器主要是与JSP/Servlet兼容的Web服务器，比较常用的有 Tomcat、Resin、JBoss、WebSphere 和 WebLogic 等</p>\n<p>Tomcat 服务器</p>\n<p>​\t\t目前最为流行的Tomcat服务器是Apache-Jarkarta开源项目中的一个子项目，是一个小型、轻量级的支持JSP和 Servlet 技术的Web服务器，也是初学者学习开发JSP应用的首选</p>\n<p>Resin 服务器</p>\n<p>​\t\tResin是Caucho公司的产品，是一个非常流行的支持Servlet和JSP的服务器，速度非常快。Resin本身包含了一 个支持HTML的Web服务器，这使它不仅可以显示动态内容，而且显示静态内容的能力也毫不逊色，因此许多网站 都是使用Resin服务器构建 JBoss服务器 JBoss是一个种遵从JavaEE规范的、开放源代码的、纯Java的EJB服务器，对于J2EE有很好的支持。JBoss采用 JML API实现软件模块的集成与管理，其核心服务又是提供EJB服务器，不包含Servlet和JSP的Web容器，不过它可 以和Tomcat完美结合</p>\n<p>WebSphere 服务器</p>\n<p>​\t\tWebSphere是IBM公司的产品，可进一步细分为 WebSphere Performance Pack、Cache Manager 和 WebSphere Application Server等系列，其中WebSphere Application Server 是基于Java 的应用环境，可以运行 于 Sun Solaris、Windows NT 等多种操作系统平台，用于建立、部署和管理Internet和Intranet Web应用程序。</p>\n<p>WebLogic 服务器</p>\n<p>​\t\tWebLogic 是BEA公司的产品（现在已经被Oracle收购），可进一步细分为 WebLogic Server、WebLogic Enterprise 和 WebLogic Portal 等系列，其中 WebLogic Server 的功能特别强大。WebLogic 支持企业级的、多层 次的和完全分布式的Web应用，并且服务器的配置简单、界面友好。对于那些正在寻求能够提供Java平台所拥有的 一切应用服务器的用户来说，WebLogic是一个十分理想的选择</p>\n<h2> 6. Tomcat</h2>\n<p>(1) Tomcat下载与安装</p>\n<p>开源小型web服务器 ，完全免费，主要用于中小型web项目，只支持Servlet和JSP 等少量javaee规范（就是 JavaWeb编程接口）</p>\n<p><a href=\"https://tomcat.apache.org\" target=\"_blank\" rel=\"noopener noreferrer\">https://tomcat.apache.org</a></p>\n<figure><figcaption>image-20221019203030315</figcaption></figure>\n<p>下载好之后，安装到任意目录</p>\n<p>安装步骤:</p>\n<ol>\n<li>\n<p>下载Tomcat</p>\n</li>\n<li>\n<p>解压到一个没有特殊符号的目录中（一般纯英文即可）</p>\n</li>\n<li>\n<p>进入到解压的目录下找到bin\\startup.bat双击启动即</p>\n</li>\n</ol>\n<p>注意:不建议将服务器软件放在磁盘层次很多的文件夹中!</p>\n<p>不建议放在中文路径下!</p>\n<p>tomcat安装需要配置JAVA_HOME环境变量</p>\n<p>(2)tomcat的目录</p>\n<p>1、bin：该目录下存放的是二进制可执行文件，如果是安装版，那么这个目录下会有两个exe文件： tomcat9.exe、tomcat9w.exe，前者是在控制台下启动Tomcat，后者是弹出UGI窗口启动Tomcat；如果是解压 版，那么会有startup.bat和shutdown.bat文件，startup.bat用来启动Tomcat，但需要JDK的配置，shutdown.bat 用来停止Tomcat；</p>\n<p>2、conf：这是一个非常非常重要的目录，这个目录下有四个最为重要的文件： server.xml：配置整个服务器信息。例如修改端口号，添加虚拟主机等； tomcat-users.xml：存储tomcat用户的文件，这里保存的是tomcat的用户名及密码，以及用户的角色信息。可以 按着该文件中的注释信息添加tomcat用户，然后就可以在Tomcat主页中进入Tomcat Manager页面了；</p>\n<p>web.xml：部署描述符文件，这个文件中注册了很多MIME类型，即文档类型。这些MIME类型是客户端与服务器之 间说明文档类型的，如用户请求一个html网页，那么服务器还会告诉客户端浏览器响应的文档是text/html类型 的，这就是一个MIME类型。客户端浏览器通过这个MIME类型就知道如何处理它了。当然是在浏览器中显示这个 html文件了。但如果服务器响应的是一个exe文件，那么浏览器就不可能显示它，而是应该弹出下载窗口才对。 MIME就是用来说明文档的内容是什么类型的！</p>\n<p>context.xml：对所有应用的统一配置，通常我们不会去配置它。</p>\n<p>3、lib：Tomcat的类库，里面是一大堆jar文件。如果需要添加Tomcat依赖的jar文件，可以把它放到这个目录中， 当然也可以把应用依赖的jar文件放到这个目录中，这个目录中的jar所有项目都可以共享之，但这样你的应用放到 其他Tomcat下时就不能再共享这个目录下的Jar包了，所以建议只把Tomcat需要的Jar包放到这个目录下；</p>\n<p>4、logs：这个目录中都是日志文件，记录了Tomcat启动和关闭的信息，如果启动Tomcat时有错误，那么异常也会 记录在日志文件中。</p>\n<p>5、temp：存放Tomcat的临时文件，这个目录下的东西可以在停止Tomcat后删除！</p>\n<p>6、webapps：存放web项目的目录，其中每个文件夹都是一个项目；如果这个目录下已经存在了目录，那么都是 tomcat自带的项目。其中ROOT是一个特殊的项目，在地址栏中没有给出项目目录时，对应的就是ROOT项目。</p>\n<p><a href=\"http://localhost:8080/examples%EF%BC%8C%E8%BF%9B%E5%85%A5%E7%A4%BA%E4%BE%8B%E9%A1%B9%E7%9B%AE%E3%80%82%E5%85%B6%E4%B8%ADexamples%E5%B0%B1%E6%98%AF%E9%A1%B9%E7%9B%AE%E5%90%8D%EF%BC%8C%E5%8D%B3%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E5%90%8D%E5%AD%97%E3%80%82\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:8080/examples，进入示例项目。其中examples就是项目名，即文件夹的名字。</a></p>\n<p>7、work：运行时生成的文件，最终运行的文件都在这里。通过webapps中的项目生成的！可以把这个目录下的内 容删除，再次运行时会生再次生成work目录。当客户端用户访问一个JSP文件时，Tomcat会通过JSP生成Java文 件，然后再编译Java文件生成class文件，生成的java和class文件都会存放到这个目录下。</p>\n<p>8、LICENSE：许可证。</p>\n<p>9、NOTICE：说明文件。</p>\n<p>通过url访问服务器:</p>\n<p>url:<a href=\"http://xn--ip-fr5c86lw2a0cw16k83z\" target=\"_blank\" rel=\"noopener noreferrer\">http://服务器的ip地址</a>:端口号/项目名/被访问的页面</p>\n<p>示例:<a href=\"http://localhost:8080/test0918\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:8080/test0918</a></p>\n<p>注: (1)启动tomcat后,tomcat会加载部署在服务器端的所有项目 (2) 浏览器访问的页面是服务器端的页面,基本上服务器的项目和工作空间的项目要保持一致</p>\n<p>(3)IntelliJ IDEA配置Tomcat</p>\n<p>1，点击Run---EDit Configurations...</p>\n<figure><figcaption>image-20221019203439672</figcaption></figure>\n<p>2.点击左侧“+”号，找到Tomcat Server---Local（若是没有找到Tomcat Server 可以点击最后一行 34 items more）</p>\n<figure><figcaption>image-20221019203513219</figcaption></figure>\n<p>3.在 To m c a t S e r v e r - &gt; lo c al- &gt; S e r v e r - &gt; A p plic a tio n s e r v e r 项 目 下 ，</p>\n<p>点 击 C o n fi g u r a tio n ， 找 到 本 地 To m c a t 服 务器 ， 再 点 击 O K 按 钮。</p>\n<figure><figcaption>image-20221019203639520</figcaption></figure>\n<p>至此，IntelliJ IDEA配置Tomcat完成。</p>\n<h2> 7.创建JavaWeb项目</h2>\n<p>1.点击左上角的File--&gt;New--&gt;Project</p>\n<figure><figcaption>image-20221019203720789</figcaption></figure>\n<p>2.找到Java Enterprise之后，在Application Sever中找到自己的Tomcat，同时勾选中Web Application</p>\n<figure><figcaption>image-20221019203813333</figcaption></figure>\n<figure><figcaption>image-20221019203832981</figcaption></figure>\n<figure><figcaption>image-20221019203846547</figcaption></figure>\n<figure><figcaption>image-20221019203905499</figcaption></figure>\n<p>3.第一项是你的工程名字，第二个是你的工程路径，选择好之后点击finish</p>\n<figure><figcaption>image-20221019203930565</figcaption></figure>\n<p>4.创建classes和lib文件夹，名字不可改</p>\n<figure><figcaption>image-20221019203956429</figcaption></figure>\n<p>像这样</p>\n<figure><figcaption>image-20221019204016620</figcaption></figure>\n<p>5.配置jar包和classes包：</p>\n<p>5.1 在File中找到Project Structure</p>\n<figure><figcaption>image-20221019204047645</figcaption></figure>\n<p>5.2 点击Modules ,选择Paths,选中Use module compile output path ,把路径改成刚刚创建的classes文件夹</p>\n<figure><figcaption>image-20221019204147211</figcaption></figure>\n<p>5.3 ok后再点旁边的Dependencies,点击\"+\"号，选择1 JARs or directories ，</p>\n<figure><figcaption>image-20221019204206238</figcaption></figure>\n<p>5.4，选择你刚刚创建的lib文件夹，OK</p>\n<figure><figcaption>image-20221019204245649</figcaption></figure>\n<p>5.5 选中jar Directory。</p>\n<figure><figcaption>image-20221019204307664</figcaption></figure>\n<p>6.部署项目:将本地项目安装到服务器中</p>\n<p>6.1回到主界面后，点击Run ，选择Edit Configurations</p>\n<figure><figcaption>image-20221019204337067</figcaption></figure>\n<p>6.2 看tomcat已经有啦，这是java Enterprise的好处啦，点击Deployment ,</p>\n<figure><figcaption>image-20221019204357450</figcaption></figure>\n<p>6.3点击右上角的三角形</p>\n<figure><figcaption>image-20221019204441171</figcaption></figure>\n<p>6.4 运行成功。</p>\n<p>至此，intellij idea创建并设置javaweb工程全部完成</p>\n<h2> 8.修改端口号</h2>\n<p>修改配置文件:/conf/server.xml</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>如果将端口号改成80,则访问项目时的请求路径就可以省略端口号。</p>\n<h2> 9.tomcat如何管理项目</h2>\n<p>给tomcat增加管理员信息:</p>\n<p>配置conf/tomcat-users.xml</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>注意:tomcat启动的时候会加载webapps下的所有项目</p>\n",
      "date_modified": "2023-04-17T06:04:06.912Z",
      "authors": [],
      "tags": [
        "java",
        "后端",
        "javaweb"
      ]
    }
  ]
}